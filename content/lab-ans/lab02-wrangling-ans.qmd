---
title: "Lab 02 - Wrangling (Ans)"
output: 
  html: 
    highlight: pygments
    css: lab.css
    preview-links: auto
---

### Load packages

```{r load-packages, message=FALSE}
library(tidyverse) 
```


### Exercise 1

How many *unique* *hurricanes* are included in this dataset? 

(Note the specific value may differ based on the version of the dataset you're using, but the code would not change.)

```{r hurricanes}
n_unique <- storms |> 
  filter(status == "hurricane") |>
  distinct(name, year, .keep_all = TRUE) |>
  count() |>
  pull(n)

# OR

storms |> 
  filter(status == "hurricane") |>
  group_by(year, name) |> 
  count() |>
  nrow()

# ChatGPT answer
# idea is correct; code is not
# n_distinct(storms, name)

```

There are `r n_unique` unique hurricanes.

(Note that we need to group by name *and* year, as certain storms have the same name...in different years.)

### Exercise 2

**Note**: If you used `storms` on datahub, the `ts_diameter` column has missing information and were likely unable to complete this question. Otherwise...this would have been the approach...

Which tropical storm affected the largest area experiencing tropical storm strength winds? And, what was the maximum sustained wind speed for that storm?


```{r trop-storm-area, eval=FALSE}
storms |> 
  filter(status == "tropical storm", 
         !is.na(ts_diameter)) |> 
  slice_max(ts_diameter)
```

OR

```{r trop-storm-area2, eval=FALSE}
storms |>
  filter(status == "tropical storm",
         !is.na(ts_diameter)) |> 
  filter(ts_diameter == max(ts_diameter, na.rm=TRUE))

# ChatGPT answer is way off
```

Sandy (2012) had the largest area affected.

### Exercise 3

Among all storms in this dataset, in which month are storms most common? Does this depend on the status of the storm? (In other words, are hurricanes more common in certain months than tropical depressions? or tropical storms?) 


```{r common-month}
# most common month
storms |> 
  distinct(name, year, .keep_all=TRUE) |>
  group_by(month) |>
  summarise(n = n()) |> # could alternatively use count() here
  arrange(desc(n))

# ChatGPT is close but missing uniqueness of the storm (would still get the correct answer)
```

September is the most common month.

```{r common-month-status}
# depend on status?
storms |> 
  group_by(status, month) |>
  summarise(n = n()) |> # could alternatively use count() here
  slice_max(n)
```

It does not depend on status. September is the most common for all three storm types.

### Exercise 4

Your boss asks for the name, year, and status of all category 5 storms that have happened in the 2000s. Carry out the operations that would deliver what they're looking for. 

```{r}
storms |>
  filter(category == 5,
         between(year, 2000, 2009)) |>
  select(name, year, status) |>
  distinct(name, year, .keep_all=TRUE)

# ChatGPT answer
# incorrect b/c it mixes up status and category
# also missing the equal to aspect for an inclusive decade
# storms %>%
#   filter(year >= 2000, year < 2010, status == "5") %>%
#   select(name, year, status)
```


### Exercise 5

Filter these data to only include storms that occurred during *your* lifetime (your code and results may differ from your classmates!). Among storms that have occurred during your lifetime, what's the mean and median air pressure across all measurements taken? 

```{r air-pressure}
my_storms <- storms |>
  filter(between(year, 1988, 2023)) # alternatively filter(year >= 1988)

my_storms |>
  summarise(median_pressure = median(pressure),
            mean_pressure = mean(pressure))

# ChatGPT did well here
```

- Median: 999 millibars
- Mean: 991 millibars

### Exercise 6

Which decade (of the storms included in the dataset) had the largest number of unique reported storms?
 
```{r decade}
storms |> 
  distinct(name, year) |>
  mutate(decade = year - year %% 10) |> # there are MANY different ways to approach this!
  group_by(decade) |>
  count()

# ChatGPT answer
# incorrect b/c of the distinct name/near piece missing
# would get correct decade but not the correct answer
# storms %>%
#   mutate(decade = floor(year/10)*10) %>%
#   group_by(decade) %>%
#   summarise(unique_storms = n_distinct(name)) %>%
#   arrange(desc(unique_storms)) %>%
#   top_n(1)
```
 
The 2000s.

(Note: we want to be sure to only count each storm once. Could also `arrange` by `desc(n)` to have 2000 at top.)

### Exercise 7

Among the subset of storms occurring in your lifetime, which storm lasted the longest? Include your code and explain your answer.

```{r lifetime}
my_storms |>  
  group_by(name, year) |> 
  count() |> 
  arrange(desc(n))
```

Nadine lasted the longest (unless you were born after 2012).

(Note: The logic here is that storms are reported every six hours, per the description of the dataset, so the storm that has the most rows/entries would have lasted the longest)

