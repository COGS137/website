---
title: "Lab 03 - Data Visualization (Ans)"
author: "Sean Trott"
output: 
  html: 
    highlight: pygments
    css: lab.css
    preview-links: auto
---


### Load packages

```{r load-packages, message=FALSE}
library(tidyverse) 
```

### Load data

```{r}
college_recent_grads <- read_csv("data/recent-grads.csv")

glimpse(college_recent_grads)
```


# Data wrangling and visualization

## Which major has the lowest unemployment rate?


```{r lowest-unemp-select}
college_recent_grads |>
  arrange(unemployment_rate) |>
  select(rank, major, unemployment_rate)
```

Display only 4 decimal places using `mutate` and `round`:

```{r}
college_recent_grads |>
  arrange(unemployment_rate) |>
  select(rank, major, unemployment_rate) |>
  mutate(unemployment_rate = round(unemployment_rate, digits = 4))
```

Display 2 scientific digits using `options`:

```{r}
options(digits = 2)
```

### Exercise 1

Which of these options, changing the input data or altering the 
number of digits displayed without touching the input data, is the better option? 
Explain your reasoning. Then, implement the option you chose.

I prefer the `options` approach because it will enforce consistency each time we display variables, without having to make the call to `round` each time (without changing the underlying data). 



## Which major has the highest percentage of women?

### Exercise 2

Using what you've learned so far, arrange the data in descending order with respect to proportion of women in a major, and display only the major, the total number of people with major, and proportion of women. Show only the top 3 majors by adding `head(3)` at the end of the pipeline.

The `sharewomen` column lists the proportion of women in each major. So we can `arrange` our data in descending order using `desc(sharewomen)`, then `select` the columns we want: `major`, `total`, and `sharewomen`. We then just display the top 3 majors using `head(3)`.

```{r}
college_recent_grads |>
  arrange(desc(sharewomen)) |>
  select(major, total, sharewomen) |>
  head(3)
```

## How do the distributions of median income compare across major categories?


### Exercise 3

Why do we often choose the median, rather than the mean, to 
describe the typical income of a group of people?

The mean is more affected by the presence of outliers and by the skew of the distribution. Thus, the presence of a single person with very high income can increase the mean substantively, such that it's no longer a good impression of the overall distribution. In contrast, the median (or the "middle number") tells us the income exactly in the middle of the distribution.

### Exercise 4

Try binwidths of $1000 and $5000 and choose one. Explain your reasoning for your choice. Note that the binwidth is an argument for the `geom_histogram` function. So to specify a binwidth of $1000, you would use 
`geom_histogram(binwidth = 1000)`.

```{r binwidths}
ggplot(data = college_recent_grads, mapping = aes(x = median)) +
  geom_histogram(binwidth=5000)

```

I ended up choosing `binwidth=5000`. When `binwidth=1000`, there were too many small differences in income that were thus not grouped together, and it was harder to see the overall shape of the distribution.

We can also calculate summary statistics for this distribution using the 
`summarise` function:

```{r}
college_recent_grads |>
  summarise(min = min(median), max = max(median),
            mean = mean(median), med = median(median),
            sd = sd(median), 
            q1 = quantile(median, probs = 0.25),
            q3 = quantile(median, probs = 0.75))
```


### Exercise 5

Based on the shape of the histogram you created in the 
previous exercise, determine which of these summary statistics is useful 
for describing the distribution. Write up your description (remember 
shape, center, spread, any unusual observations) and include the summary 
statistic output as well.

The underlying distribution of `median` incomes is somewhat right-skewed, with at least 1-2 majors making a lot of money. Because of this, I'm going to use the `median` median income. 

It would be probably be fine to use the `mean` median income as well---judging by the distribution of `median` incomes in each `major_category`, which are relatively normal-ish.

### Exercise 6

Plot the distribution of `median` income using a histogram, 
faceted by `major_category`. Use the `binwidth` you chose in the earlier 
exercise.


```{r}
ggplot(data = college_recent_grads, mapping = aes(x = median)) +
  geom_histogram(binwidth = 5000) +
  facet_wrap( ~ major_category, ncol = 4)
```

### Exercise 7

Which major category has the highest typical (you'll need 
to decide what this means) median income? Use the partial code below, 
filling it in with the appropriate statistic and function. Also note that we 
are looking for the highest statistic, so make sure to arrange in the correct 
direction. 

```{r}
college_recent_grads |>
  group_by(major_category) |>
  summarise(median = median(median)) |>
  arrange(desc(median))
```

Engineering.

### Exercise 8

Which major category is the least popular in this sample? 
To answer this question we use a new function called `count`, which first 
groups the data and then counts the number of observations in each category (see below). Add to the pipeline appropriately to arrange the results so 
that the major with the lowest observations is on top.

```{r}
college_recent_grads |>
  count(major_category) |>
  arrange(desc(-n))
```


## All STEM fields aren't the same

First, let's create a new vector called `stem_categories` that lists the 
major categories that are considered STEM fields.

```{r}
stem_categories <- c("Biology & Life Science",
                     "Computers & Mathematics",
                     "Engineering",
                     "Physical Sciences")
```

Then, we can use this to create a new variable in our data frame indicating 
whether a major is STEM or not.

```{r}
college_recent_grads <- college_recent_grads |>
  mutate(major_type = case_when(
    major_category %in% stem_categories ~ "stem",
    TRUE ~ "not stem"
  ))
```

We can use the logical operators to also `filter` our data for STEM majors 
whose median earnings is less than median for all majors's median earnings, 
which we found to be $36,000 earlier.

```{r}
college_recent_grads |>
  filter(
    major_type == "stem",
    median < median(college_recent_grads$median)
  )
```

### Exercise 9

Which STEM majors have median salaries equal to or less than the median for all majors's median earnings? Your output should only show 
the major name and median, 25th percentile, and 75th percentile earning for 
that major as and should be sorted such that the major with the highest 
median earning is on top.

```{r}
college_recent_grads |>
  filter(
    major_type == "stem",
    median < median(college_recent_grads$median)
  ) |>
  select(major, median, p25th, p75th) |>
  arrange(desc(median))
```

## What types of majors do women tend to major in?

### Exercise 10

Create a scatterplot of median income vs. proportion of 
women in that major, colored by whether the major is in a STEM field or not. Describe the association between these three variables.

```{r}
college_recent_grads |>
  drop_na(sharewomen) |> ## This will drop rows for which sharewomen has NA value
  ggplot(aes(x = median,
             y = sharewomen,
             color = major_type)) +
  geom_point(alpha = .6) +
  labs(x = "Median income for major",
       y = "Share of women in major",
       color = "STEM major?")
```

In general, there appears to be a negative relationship between `median` income and the proportion of women (`sharewomen`) in a major. Both variables are also correlated with `major_type`: `stem` majors tend to have a lower proportion of women (and lower `median` income), while `not stem` majors have a higher proportion (and higher `median` income).

(Note that the negative relationship with `median` income is somewhat clearer if `log(median`) is used instead.)
