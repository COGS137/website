---
title: "Lab 01: Tooling"
author: ""
format:
  revealjs:
    embed-resources: true
    slide-number: true
    chalkboard: false 
    preview-links: auto
    logo: img/cogs137-logo-hex.png
    footer: <https://cogs137.github.io/website/>
---

# Welcome to lab {background-color="#0E3A53"}

## Agenda

1.  **Lab structure:** Lab structure overview.
2.  **Lab 01 intro and demos:** Introduce the lab, and work through the first section as a class.
3.  **On your own:** Work on the rest of the lab "on your own", but feel free to check in with classmates as much as you like.

# Lab structure {background-color="#0E3A53"}

## Lab structure

-   5-10 minute introduction (a bit longer today)

-   Use the remaining time to work through the lab exercises and fill out your lab report

    -   Submit: on your own
    -   Working: always allowed to work together

-   Lab instructions posted on the course website on the left panel under "Labs"

    -   Let's go find today's lab!

## Tips {.scrollable}

-   You do not have to finish the lab in class; you have until midnight to submit. But, you might choose to get through portions that you think will be challenging (which initially might be the coding component) in class when staff can help you on the spot, and leave the narrative writing until later.

-   Do not pressure each other to finish early; use the time wisely to really learn the material and produce a quality lab.

-   When working with others, do *not* split up lab among classmates, work on it together in its entirety.

-   Sometimes you may not finish the entire lab...and that's ok! When this happens or you're unsure about what you turn in, be sure to go back and check your thoughts/work against the posted answer key.

# Lab 01: Intro and Demos {background-color="#0E3A53"}

------------------------------------------------------------------------

## Goals

-   **Introduce you to Git and GitHub**: collaboration and version control system that we will be using throughout the course
    -   Git is a version control system -- like "Track Changes" features from Microsoft Word/Google Docs on steroids
    -   GitHub is the home for your git-based projects on the internet
    -   Connect your RStudio on datahub to your GitHub account
-   **Introduce you to R and RStudio**:
    -   R is the name of the programming language itself
    -   RStudio is a convenient interface

## Getting started: GitHub & datahub {.scrollable}

First, put away computers, and watch me do it:

-   Demo of the process
-   Steps are spelled out in the "GitHub Housekeeping" portion of the lab

## Getting started: Assignment Retrieval {.scrollable}

First, put away computers, and watch me do it:

-   Click on the assignment link on Canvas for today's lab to create your GitHub repository (which we'll refer to as "repo" going forward) for the lab. This repo contains a template you can build on to complete your lab.

-   On GitHub, accept the assignment. Click on the link to navigate to the repo.

-   On the repo, click the green "\<\> Code" button, ensure that "SSH" is selected, and then copy the URL.

-   Go to datahub. and open RStudio. Go to **File \> New Project**... and select to create a **New Project from Version Control**. On the following menu, select **Git**.

-   Copy and paste the URL of your assignment repo into the "Repository URL" dialog box.

-   Hit **Create Project**.

Now it's your turn! Place a green sticky on your laptop when you're done with this part (you can continue if you like). Place a pink sticky if you have questions.

# On your own!

<iframe src="https://giphy.com/embed/13awhIC2CcDaHC" width="480" height="336" frameBorder="0" class="giphy-embed" allowFullScreen>

</iframe>

<p><a href="https://giphy.com/gifs/fall-kid-childhood-13awhIC2CcDaHC">via GIPHY</a></p>
