[
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "",
    "text": "Creative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible."
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\n\n__Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\n\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\n\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\n\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.t stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org"
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html",
    "href": "content/labs/01-lab-intro-r.html",
    "title": "Lab 01 - Tooling",
    "section": "",
    "text": "The main goal of this lab is to introduce you to R and RStudio, which we will be using throughout the course to learn and practice programming and analyze data.\n\n\nR is the name of the programming language itself and RStudio is a convenient interface.\nAn additional goal is to introduce you to git and GitHub, which is the collaboration and version control system that we will be using throughout the course.\n\n\ngit is a version control system (like “Track Changes” features from Microsoft Word on steroids) and GitHub is the home for your Git-based projects on the internet (like DropBox but much, much better).\nAs the labs progress, you are encouraged to explore beyond what the labs say directly; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\nYou are encouraged to ask one another questions and work together, but each individual must turn in their own lab each week."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#github-housekeeping",
    "href": "content/labs/01-lab-intro-r.html#github-housekeeping",
    "title": "Lab 01 - Tooling",
    "section": "GitHub Housekeeping",
    "text": "GitHub Housekeeping\n\n\n\n\n\n\nNote\n\n\n\nYour email address is the address tied to your GitHub account and your name should be first and last name.\n\n\nBefore we can get started we need to take care of some required housekeeping (if you didn’t complete it during class). Specifically, we need to configure your git so that RStudio can communicate with GitHub…and so you do not have to type in your username and password every time you want to communicate with GitHub from RStudio. These steps will be demo-ed during lab and you’ll have time to walk through the steps!\n\n\n\n\n\n\nNote\n\n\n\nIf you aren’t able to attend lab and get stuck here, there is a podcast recording from lecture on 9/29 from the COGS 137 Fa21 iteration where you can see these steps demo-ed.\n\n\n\nStep 1: Email and Username\nThe first step requires two pieces of information: your email address and your name.\nTo do so, follow these steps:\n\nGo to the Terminal pane\nType the following two lines of code, replacing the information in the quotation marks with your info:\n\n\ngit config --global user.email \"your email\"\ngit config --global user.name \"your name\"\n\nFor example, for me these are:\n\ngit config --global user.email \"sellis@ucsd.edu\"\ngit config --global user.name \"Shannon Ellis\"\n\nTo confirm that the changes have been implemented, run the following:\n\ngit config --global user.email\ngit config --global user.email\n\n\n\nStep 2: Generate ssh key\nIn the terminal, you’ll want to generate an ssh key by typing:\n\nssh-keygen\n\nAfter hitting enter/return to execute the above, you’ll press return/enter three times to bypass specifying a location and passphrase.\n\n\nStep 3: Copy your ssh key\nFrom the terminal type:\n\ncat ~/.ssh/id_rsa.pub\n\nYou’ll want to highlight and copy the full result of this command. It will start with ssh-rsa and end with something including dsmlp toward the end.\n\n\nStep 4: Let GitHub know your key\n\nIn your browser, navigate to https://github.com/settings/keys\nClick “New SSH Key”\nSet title to DSMLP\nPaste what you copied in step 3 into the “Key” box\nClick “Add SSH Key”\n\n\n\nStep 5: Finalize\nReturn to the terminal in RStudio and run the following command:\n\nssh git@github.com\n\nYou may see a message like `The authenticity of host … can’t be established`. You can type yes and hit return/enter after doing so if you do.\nYou’ll then see a message like You've successfully authenticated, but GitHub does not provide shell access. At this point, you’re all set!\nThis will be the only time you have to do this. From here on out, you’ll be able to “communicate” with GitHub from RStudio without typing your username/password."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#cloning-the-lab",
    "href": "content/labs/01-lab-intro-r.html#cloning-the-lab",
    "title": "Lab 01 - Tooling",
    "section": "Cloning the lab",
    "text": "Cloning the lab\nEach of your assignments will begin with the following steps. You saw these once in class and, they’re outlined in detail here again. Going forward each lab will start with a “Getting started” section but details will be a bit more sparse than this. You can always refer back to this lab for a detailed list of the steps involved for getting started with an assignment.\nClick on the assignment link for this week’s lab on the Canvas homepage. You will have to Accept before proceeding. Refresh the page and follow the link to the repo created for you. This repo contains a template you can build on to complete your lab.\n\n\n\n\n\n\n\nOn this page on GitHub, click the URL provided for you. This will bring you to your copy of the repo on GitHub. Click on the green <> Code button to clone the repo. Be sure that SSH is selected and copy this URL.\n\n\n\n\n\n\nImportant\n\n\n\nBe sure that any time you are copying a link from GitHub under the <>Code button, you select and use the ‘SSH’ URL as this is what will allow you to not have to type your username and password.\n\n\n\n\n\n\n\n\n\nGo to datahub and open RStudio. Go to File > New Project… and select to create a New Project from Version Control. On the following menu, select Git.\nCopy and paste the URL of your assignment repo into the “Repository URL” dialog box:\n\n\n\n\n\n\n\nHit Create Project. Open up lab-01.Rmd and continue through this lab. Your work/answers for this lab will be submitted in that document."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#packages",
    "href": "content/labs/01-lab-intro-r.html#packages",
    "title": "Lab 01 - Tooling",
    "section": "Packages",
    "text": "Packages\nIn this lab we will work with two packages: datasauRus which contains the dataset, and tidyverse which is a collection of packages for doing data analysis in a “tidy” way.\ntidyverse has already been installed for you, so it only needs to be loaded using library. (see below)\nHowever, datasauRus has not yet been installed. Run the following in your console to install this package:\n\ninstall.packages(\"datasauRus\")\n\n\n\nNote that often packages will already be installed for you on datahub in this course, but we want you to know how to install them if you need to install one at any point.\nNote that package installation happens a single time. But, any time you want to use a package (after it’s been installed), it has to be loaded, as we do here:\n\nlibrary(tidyverse) \nlibrary(datasauRus)\n\nYou should be able to Knit your document and see the results.\nNote that the packages are also loaded with the same commands in your R Markdown document."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#yaml",
    "href": "content/labs/01-lab-intro-r.html#yaml",
    "title": "Lab 01 - Tooling",
    "section": "YAML:",
    "text": "YAML:\n\n\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “Yet Another Markup Language”. It is a human-friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\nOpen the R Markdown (Rmd) file in your project, change the author name to your name and knit the document. This will generate an HTML document."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#committing-changes",
    "href": "content/labs/01-lab-intro-r.html#committing-changes",
    "title": "Lab 01 - Tooling",
    "section": "Committing changes:",
    "text": "Committing changes:\nThen Go to the Git pane in your RStudio on Datahub.\nIf you have made changes to your Rmd file, you should see it listed here. Click on it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state that includes your changes. Be sure to also select your HTML document. Once you’re happy with these changes, write “Update author name” in the Commit message box and hit Commit.\n\n\n\n\n\n\n\nYou don’t have to commit after every change, this would get quite cumbersome. You should consider committing states that are meaningful to you for inspection, comparison, or restoration. In the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the quarter progresses, we will let you make these decisions."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#pushing-changes",
    "href": "content/labs/01-lab-intro-r.html#pushing-changes",
    "title": "Lab 01 - Tooling",
    "section": "Pushing changes:",
    "text": "Pushing changes:\nNow that you have made an update and committed this change, it’s time to push these changes to the web! Or more specifically, to your repo on GitHub. Why? So that others can see your changes. And by others, we mean the course teaching team (your repos in this course are private to you and us, only).\nIn order to push your changes to GitHub, click on Push. Go check your repo on GitHub - you’ll see your updated documents there!\n\n\n\n\n\n\nThought exercise\n\n\n\nFor which of the above steps (changing project name, making updates to the document, committing, and pushing changes) do you need to have an internet connection? Discuss with your classmates."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#data",
    "href": "content/labs/01-lab-intro-r.html#data",
    "title": "Lab 01 - Tooling",
    "section": "Data",
    "text": "Data\nThe data frame we will be working with today is called datasaurus_dozen2 and it’s in the datasauRus package. Actually, this single data frame contains 13 datasets, designed to show us why data visualization is important and how summary statistics alone can be misleading. The different datasets are marked by the dataset variable.\nTo find out more about the dataset, type the following in your Console: ?datasaurus_dozen. A question mark before the name of an object will always bring up its help file. This command must be ran in the Console.\n\nExercise 1\nBased on the help file, how many rows and how many columns does the datasaurus_dozen file have? What are the variables included in the data frame? Add your responses to your lab report. When you’re done, commit your changes with the commit message “Added answer for Ex 1”, and push.\nLet’s take a look at what these datasets are. To do so we can make a frequency table of the dataset variable:\n\ndatasaurus_dozen |>\n  count(dataset)\n\n# A tibble: 13 × 2\n   dataset        n\n   <chr>      <int>\n 1 away         142\n 2 bullseye     142\n 3 circle       142\n 4 dino         142\n 5 dots         142\n 6 h_lines      142\n 7 high_lines   142\n 8 slant_down   142\n 9 slant_up     142\n10 star         142\n11 v_lines      142\n12 wide_lines   142\n13 x_shape      142\n\n\nThe original Datasaurus (dino) was created by Alberto Cairo in this great blog post. The other Dozen were generated using simulated annealing and the process is described in the paper Same Stats, Different Graphs: Generating Datasets with Varied Appearance and Identical Statistics through Simulated Annealing by Justin Matejka and George Fitzmaurice.3 In the paper, the authors simulate a variety of datasets that the same summary statistics to the Datasaurus but have very different distributions."
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#data-visualization-and-summary",
    "href": "content/labs/01-lab-intro-r.html#data-visualization-and-summary",
    "title": "Lab 01 - Tooling",
    "section": "Data visualization and summary",
    "text": "Data visualization and summary\n\nExercise 2\nPlot y vs. x for the dino dataset. Then, calculate the correlation coefficient between x and y for this dataset.\nBelow is the code you will need to complete this exercise. Basically, the answer is already given, but you need to include relevant bits in your Rmd document and successfully knit it and view the results.\nStart with the datasaurus_dozen and pipe it into the filter function to filter for observations where dataset == \"dino\". Store the resulting filtered data frame as a new data frame called dino_data.\n\ndino_data <- datasaurus_dozen |>\n  filter(dataset == \"dino\")\n\nThere is a lot going on here, so let’s slow down and unpack it a bit.\nFirst, the pipe operator: |>, takes what comes before it and sends it as the first argument to what comes after it. So here, we’re saying filter the datasaurus_dozen data frame for observations where dataset == \"dino\".\nSecond, the assignment operator: <-, assigns the name dino_data to the filtered data frame.\nNext, we need to visualize these data. We will use the ggplot function for this. Its first argument is the data you’re visualizing. Next we define the aesthetic mappings. In other words, the columns of the data that get mapped to certain aesthetic features of the plot, e.g. the x axis will represent the variable called x and the y axis will represent the variable called y. Then, we add another layer to this plot where we define which geometric shapes we want to use to represent each observation in the data. In this case we want these to be points,m hence geom_point.\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n  geom_point()\n\n\n\n\nIf this seems like a lot, it is. And you will learn about the philosophy of building data visualizations in layer in detail next week. For now, follow along with the code that is provided.\nFor the second part of this exercises, we need to calculate a summary statistic: the correlation coefficient. Correlation coefficient, often referred to as \\(r\\) in statistics, measures the linear association between two variables. You will see that some of the pairs of variables we plot do not have a linear relationship between them. This is exactly why we want to visualize first: visualize to assess the form of the relationship, and calculate \\(r\\) only if relevant. In this case, calculating a correlation coefficient really doesn’t make sense since the relationship between x and y is definitely not linear – it’s dinosaurial!\nBut, for illustrative purposes, let’s calculate correlation coefficient between x and y.\n\n\nStart with dino_data and calculate a summary statistic that we will call r as the correlation between x and y.\n\ndino_data |>\n  summarize(r = cor(x, y))\n\n# A tibble: 1 × 1\n        r\n    <dbl>\n1 -0.0645\n\n\nThis is a good place to pause, commit changes with the commit message “Added answer for Ex 2”, and push.\n\n\nExercise 3\nPlot y vs. x for the star dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\nThis is another good place to pause, commit changes with the commit message “Added answer for Ex 3”, and push.\n\n\nExercise 4\nPlot y vs. x for the circle dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\nYou should pause again, commit changes with the commit message “Added answer for Ex 4”, and push.\n\n\nFacet by the dataset variable, placing the plots in a 3 column grid, and don’t add a legend.\n\n\nExercise 5\nFinally, let’s plot all datasets at once. In order to do this we will make use of facetting.\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset)) +\n  geom_point() +\n  facet_wrap(~ dataset, ncol = 3) +\n  theme(legend.position = \"none\")\n\nAnd we can use the group_by function to generate all the summary correlation coefficients.\n\ndatasaurus_dozen |>\n  group_by(dataset) |>\n  summarize(r = cor(x, y))\n\nYou’re done with the data analysis exercises, but we’d like you to do two more things:\n\n\n\n\n\nFigure 1: ?(caption)"
  },
  {
    "objectID": "content/labs/01-lab-intro-r.html#bonus-exercises",
    "href": "content/labs/01-lab-intro-r.html#bonus-exercises",
    "title": "Lab 01 - Tooling",
    "section": "Bonus Exercises",
    "text": "Bonus Exercises\nComplete these as time permits to further your experience with, comfort in, and understanding of R Markdown documents.\n\nResize your figures\nClick on the gear icon in on top of the R Markdown document, and select “Output Options…” in the dropdown menu. In the pop up dialogue box go to the Figures tab and change the height and width of the figures, and hit OK when done. Then, knit your document and see how you like the new sizes. Change and knit again and again until you’re happy with the figure sizes. Note that these values get saved in the YAML.\n\n\n\n\n\nFigure 2: ?(caption)\n\n\n\n\nYou can also use different figure sizes for different figures. To do so click on the gear icon within the chunk where you want to make a change. Changing the figure sizes added new options to these chunks: fig.width and fig.height. You can change them by defining different values directly in your R Markdown document as well.\n\n\n\n\n\n\n\nChange the look of your report\nOnce again click on the gear icon in on top of the R Markdown document, and select “Output Options…” in the dropdown menu. In the General tab of the pop up dialogue box try out different Syntax highlighting and theme options. Hit OK and knit your document to see how it looks. Play around with these until you’re happy with the look.\n\n\n\n\n\n\nNote\n\n\n\nNot sure how to use emojis on your computer? Maybe a classmate can help? Or you can ask your TA as well!"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#agenda",
    "href": "content/lectures/00-welcome-slides.html#agenda",
    "title": "00-welcome",
    "section": "Agenda",
    "text": "Agenda\n\nDescribe what this class is\nDescribe how the class will run\nGo over the tooling for this course: R, RStudio, GitHub"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#what-is-r",
    "href": "content/lectures/00-welcome-slides.html#what-is-r",
    "title": "00-welcome",
    "section": "What is R?",
    "text": "What is R?\n : R is a statistical programming language.\nWhile R has most/all of the functionality of YFPL (your favorite programming language), it was designed for the specific use of analyzing data."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#what-is-data-science",
    "href": "content/lectures/00-welcome-slides.html#what-is-data-science",
    "title": "00-welcome",
    "section": "What is data science?",
    "text": "What is data science?\n: Data science is the scientific process of using data to answer interesting questions and/or solve important problems."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#practical-data-science-in-r",
    "href": "content/lectures/00-welcome-slides.html#practical-data-science-in-r",
    "title": "00-welcome",
    "section": "Practical Data Science in R",
    "text": "Practical Data Science in R\n\n\nProgram at the introductory level in the R statistical programming language\nEmploy the tidyverse suite of packages to interact with, wrangle, visualize, and model data\nExplain & apply statistical concepts (estimation, linear regression, logistic regression, etc.) for data analysis\nCommunicate data science projects through effective visualization, oral presentation, and written reports"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#who-am-i",
    "href": "content/lectures/00-welcome-slides.html#who-am-i",
    "title": "00-welcome",
    "section": "Who am I?",
    "text": "Who am I?\nShannon Ellis: Associate Teaching Professor, Mom & wife, volleyball-obsessed, and baking & cooking lover\n   sellis@ucsd.edu     shanellis.com    MOS 0204     Tu/Th 2-3:20PM (Lab: Fri 3-3:50PM)"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#who-all-is-involved",
    "href": "content/lectures/00-welcome-slides.html#who-all-is-involved",
    "title": "00-welcome",
    "section": "Who all is involved?",
    "text": "Who all is involved?\n\n\n\nInstructor\nShannon Ellis\nsellis@ucsd.edu\nWed 11A-12P\nVirtual (see canvas)\n\n\n\n\n\nTh 12:50-1:50\nCSB 243\n\n\nTA\nKunal Rustagi\n\nTime TBD\nLocation TBD\n\n\nIAs\nShenova Davis\n\nTime TBD\nLocation TBD"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#course-staff",
    "href": "content/lectures/00-welcome-slides.html#course-staff",
    "title": "00-welcome",
    "section": "Course Staff",
    "text": "Course Staff\n\n\n\nKunal Rustagi (TA)\nShenova Davis (IA)"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#what-is-this-course",
    "href": "content/lectures/00-welcome-slides.html#what-is-this-course",
    "title": "00-welcome",
    "section": "What is this course?",
    "text": "What is this course?\nEverything you want to know about the course, and everything you will need for the course will be posted at: https://cogs137.github.io/website/\n\n\nIs this an intro CS course? No.\nWill we be doing computing? Yes.\nWhat computing language will we learn? R.\nIs this an intro stats course? No.\nWill we be doing stats? Yes.\nAre there any prerequisites? Yes, an intro statistics course!"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#soi-dont-have-to-know-how-to-program-already",
    "href": "content/lectures/00-welcome-slides.html#soi-dont-have-to-know-how-to-program-already",
    "title": "00-welcome",
    "section": "So…I don’t have to know how to program already?",
    "text": "So…I don’t have to know how to program already?\n\n\n\n\nNope! The first few weeks of the course will be all about getting comfortable using the R programming language!\n After that, we’ll focus on delving into interesting statistical analyses through case studies.\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#the-general-plan",
    "href": "content/lectures/00-welcome-slides.html#the-general-plan",
    "title": "00-welcome",
    "section": "The General Plan",
    "text": "The General Plan\n\nWeeks 1-4: Learn to program in the tidyverse in R\nWeeks 5-10: Communication, Data Analysis, Statistics, & Case Studies (two Case Studies)\n\n\nNote: This course is back-loaded. But, that’s when group work happens."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#the-nitty-gritty",
    "href": "content/lectures/00-welcome-slides.html#the-nitty-gritty",
    "title": "00-welcome",
    "section": "The Nitty Gritty",
    "text": "The Nitty Gritty\n\nLectureIn-personWaitlistLab & OHMaterials\n\n\nClass Meetings\n\nInteractive\nLectures & lots of learn-by-doing\nBring your laptop to class every day\n\n\n\nIn-person, synchronous learning\n\nI will be teaching (so long as I’m healthy and have child care) in person.\nLectures and lab will be podcast.\nAttendance will be incentivized using a daily participation survey.\nIf you’re not feeling well, please stay home. I will do the same.\nExam will be take-home.\n\n\n\nThe (Dreaded) Waitlist\n\nCourse enrollment is supposed to be 50 for this course\nThere are 72 people currently enrolled\nI don’t control the waitlist (cogsadvising@ucsd.edu does)\nI’d anticipate our staff adding 3-5 people from the waitlist (but cannot guarantee this)\n\n\n\nLab & Office Hours\n\nOffice hours begin week 1\n\nProf: Tu: 3:30-4:30 (drop-in); W 11-12 (10 min slots; appt.)\n\nLab begins week 1 (next Friday)\n\nit’s not in a computer lab, so you’ll need to bring your own\ndetails about labs covered on Tues and in lab\ntypically labs will be released Monday and due Friday\n\nI will hang out after class today for questions/concerns from students\n\n\n\nCourse Materials\n\nTextbooks are free and available online\nCourse platforms:\n\nWebsite : schedule, policies, due dates, etc.\nGitHub : retrieving assignments, labs, exams, etc.\ndatahub : completing assignments, labs, exams etc.\nCanvas : grades, course-specific links\nPiazza : Q&A"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#diversity-inclusion",
    "href": "content/lectures/00-welcome-slides.html#diversity-inclusion",
    "title": "00-welcome",
    "section": "Diversity & Inclusion:",
    "text": "Diversity & Inclusion:\nGoal: every student be well-served by this course\n\nPhilosophy: The diversity of students in this class is a huge asset to our learning community; our differences provide opportunities for learning and understanding.\n\n\nPlan: Present course materials that are conscious of and respectful to diversity (gender identity, sexuality, disability, age, socioeconomic status, ethnicity, race, nationality, religion, politics, and culture)\n\n\nBut… if I ever fall short or if you ever have suggestions for improvement, please do share with me! There is also an anonymous Google Form if you’re more comfortable there."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#a-new-ish-course",
    "href": "content/lectures/00-welcome-slides.html#a-new-ish-course",
    "title": "00-welcome",
    "section": "A new-ish course!",
    "text": "A new-ish course!\n\nOffered twice previously\nIf something doesn’t make sense, tell me!\nIf you’ve got feedback/suggestions, I’m all ears!\n\n\nChanges since last iteration (based on feedback):\n\nspread out second half\nlikely changing the heaviness of a case study\nadd in communication to public portion\none fewer HW assignments"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#how-to-get-help",
    "href": "content/lectures/00-welcome-slides.html#how-to-get-help",
    "title": "00-welcome",
    "section": "How to get help",
    "text": "How to get help\n\nLab\nOffice Hours\nPiazza\n\n\nA few (Piazza) guidelines:\n1. No duplicates.\n2. Public posts are best.\n3. Posts should include your question, what you've tried so far, & resources used.\n4. Helping others is encouraged.\n5. No assignment code in public posts.\n6. We're not robots."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#the-r-community",
    "href": "content/lectures/00-welcome-slides.html#the-r-community",
    "title": "00-welcome",
    "section": " The R Community",
    "text": "The R Community\n\n\n\nR Rollercoaster\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#academic-integrity",
    "href": "content/lectures/00-welcome-slides.html#academic-integrity",
    "title": "00-welcome",
    "section": "Academic integrity",
    "text": "Academic integrity\nDon’t cheat.\n\nTeamwork is allowed, but you should be able to answer “Yes” to each of the following:\n\nCan I explain each piece of code and each analysis carried out in what I’m submitting?\nCould I reproduce this code/analysis on my own?\n\n\n\nThe Internet is a great resource. Cite your sources.\n\n\nTeamwork is not allowed on your midterm. It is open-notes and open-Google/ChatGPT. You cannot discuss the questions on the exam with anyone."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#when-to-can-i-use-chatgptllms",
    "href": "content/lectures/00-welcome-slides.html#when-to-can-i-use-chatgptllms",
    "title": "00-welcome",
    "section": "When To (Can I) Use ChatGPT/LLMs?",
    "text": "When To (Can I) Use ChatGPT/LLMs?\nFor anything in this course."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#how-to-use-chatgptllms",
    "href": "content/lectures/00-welcome-slides.html#how-to-use-chatgptllms",
    "title": "00-welcome",
    "section": "How To Use ChatGPT/LLMs",
    "text": "How To Use ChatGPT/LLMs\nProbably never first or right away.\n\nTo learn: Think first. Try first. Then use external resources.\n\n\nAlways read/think about/understand the output."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#chatgpt-what-to-avoid",
    "href": "content/lectures/00-welcome-slides.html#chatgpt-what-to-avoid",
    "title": "00-welcome",
    "section": "ChatGPT: What to Avoid",
    "text": "ChatGPT: What to Avoid\n\n\nOver-reliance (thwarts learning)\nHaving to look everything up (wastes time)\nLeaving tasks to the last minute (can lead to bad decisions/academic integrity issues)\nTaking the output without thinking (thwarts learning; limits critical thinking practice)\nUsing it right away for brainstorming ideas (limits ideas generated)"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#course-components",
    "href": "content/lectures/00-welcome-slides.html#course-components",
    "title": "00-welcome",
    "section": "Course components:",
    "text": "Course components:\n\n\nLabs (8): Individual submission; graded on effort\nHomework (3): Individual submission; graded on correctness\nExam (1): Individual completion & submission, take-home midterm\nCase Studies (2): Team submission, technical analysis report\nFinal Project (1) : Team submission, due Tues of finals week"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#grading",
    "href": "content/lectures/00-welcome-slides.html#grading",
    "title": "00-welcome",
    "section": "Grading",
    "text": "Grading\nYour final grade will be comprised of the following:\n\n\n\nAssignment (#)\n% of grade\n\n\n\n\nLabs (8)\n16%\n\n\nHomework (3)\n32%\n\n\nMidterm (1)\n15%\n\n\nCase Study Projects* (2)\n20%\n\n\nFinal project* (1)\n17%\n\n\n\n* indicates group submission"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#latemissed-work-policy",
    "href": "content/lectures/00-welcome-slides.html#latemissed-work-policy",
    "title": "00-welcome",
    "section": "Late/missed work policy",
    "text": "Late/missed work policy\n\nHomework and case study projects: accepted up to 3 days (72 hours) after the assigned deadline for a 25% deduction\nNo late deadlines for labs, the exam, or the final project\n\n\nNote: Prof Ellis is a reasonable person; reach out to her if you have an extenuating circumstance at any point in the quarter."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#datahub",
    "href": "content/lectures/00-welcome-slides.html#datahub",
    "title": "00-welcome",
    "section": "Datahub",
    "text": "Datahub\nDatahub is a platform hosted by UCSD that gives students access to computational resources.\nThis means that while you’ll be typing on your keyboard, you’ll be using UCSD’s computers in this class.\nWebsite: https://datahub.ucsd.edu/\n\nLaunch Environment\nWhen working on “stuff” for this course, select the COGS 137 environment.\n ## Datahub Usage\nQ: Do I have to use datahub?\nA: Nope. You could download and install all the packages we use and complete the course locally! However, many packages have already been installed for you on datahub, so it will be a tiny bit more work up front…but you won’t be dependent on the internet/datahub!"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#toolkit",
    "href": "content/lectures/00-welcome-slides.html#toolkit",
    "title": "00-welcome",
    "section": "Toolkit",
    "text": "Toolkit\n\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) R Markdown\nVersion control \\(\\rightarrow\\) Git / GitHub\nThe Internet (Google/ChatGPT/etc.)"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#r-and-rstudio",
    "href": "content/lectures/00-welcome-slides.html#r-and-rstudio",
    "title": "00-welcome",
    "section": "R and RStudio",
    "text": "R and RStudio\n\nR/RStudioTourTryR packages\n\n\nR & RStudio\n\nR is a statistical programming language\nRStudio is a convenient interface for R (an integreated development environment, IDE)\n\n\n\n\n[DEMO]\n\nConcepts introduced:\n\nConsole\nUsing R as a calculator\nEnvironment\nLoading and viewing a data frame\nAccessing a variable in a data frame\nR functions\n\n\n\nYour Turn\n\nLogin to datahub\nCarry out a mathematical operation in the console\nView the airquality dataframe\nAccess a column from the airquality dataframe\nCalculate the median for one of the numeric columns\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question.\n\n\n\nPackages are the fundamental units of reproducible R code. They include reusable R functions, the documentation that describes how to use them, and sample data 1\nAs of Sept 2023, there are ~19,941 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n\nWickham and Bryan, R PackagesCRAN contributed packages"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#what-is-the-tidyverse",
    "href": "content/lectures/00-welcome-slides.html#what-is-the-tidyverse",
    "title": "00-welcome",
    "section": "What is the Tidyverse?",
    "text": "What is the Tidyverse?\n\n\n\n\n\ntidyverse.org\n\n\nThe tidyverse is an opinionated collection of R packages designed for data science.\nAll packages share an underlying philosophy and a common syntax."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#rstudio-projects3",
    "href": "content/lectures/00-welcome-slides.html#rstudio-projects3",
    "title": "00-welcome",
    "section": "RStudio Projects1",
    "text": "RStudio Projects1\n\nBuilt-in functionality to keep all files for a single project organized\n\nRStudio Projects Documentation"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#r-markdown",
    "href": "content/lectures/00-welcome-slides.html#r-markdown",
    "title": "00-welcome",
    "section": "R Markdown",
    "text": "R Markdown\n\nFully reproducible reports – each time you knit, the document is executed from top to bottom\nSimple markdown syntax for text\nCode goes in chunks, defined by three backticks, narrative goes outside of chunks"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#r-markdown-tips",
    "href": "content/lectures/00-welcome-slides.html#r-markdown-tips",
    "title": "00-welcome",
    "section": "R Markdown tips",
    "text": "R Markdown tips\n\nKeep the R Markdown cheat sheet and Markdown Quick Reference (Help -> Markdown Quick Reference) handy, we’ll refer to it often as the course progresses\nThe workspace of your R Markdown document is separate from the Console\n\n\n\n[DEMO]"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#how-will-we-use-r-markdown",
    "href": "content/lectures/00-welcome-slides.html#how-will-we-use-r-markdown",
    "title": "00-welcome",
    "section": "How will we use R Markdown?",
    "text": "How will we use R Markdown?\n\nEvery lab / midterm / project / homework / notes / etc. is an R Markdown document\nYou’ll always have a template R Markdown document to start with\nThe amount of scaffolding in the template will decrease over the quarter"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#collaboration-git-github",
    "href": "content/lectures/00-welcome-slides.html#collaboration-git-github",
    "title": "00-welcome",
    "section": "Collaboration: Git & GitHub",
    "text": "Collaboration: Git & GitHub\n\nThe statistical programming language we’ll use is R\nThe software we use to interface with R is RStudio\nBut how do I get you the course materials that you can build on for your assignments?\n\nI’m not going to email you documents, that would be a mess!"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#version-control",
    "href": "content/lectures/00-welcome-slides.html#version-control",
    "title": "00-welcome",
    "section": "Version control",
    "text": "Version control\n\nWe introduced GitHub as a platform for collaboration\nBut it’s much more than that…\nIt’s actually designed for version control"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#versioning",
    "href": "content/lectures/00-welcome-slides.html#versioning",
    "title": "00-welcome",
    "section": "Versioning",
    "text": "Versioning\n\nLego versions"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#versioning-1",
    "href": "content/lectures/00-welcome-slides.html#versioning-1",
    "title": "00-welcome",
    "section": "Versioning",
    "text": "Versioning\nwith human readable messages\n\nLego versions with commit messages"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#why-do-we-need-version-control",
    "href": "content/lectures/00-welcome-slides.html#why-do-we-need-version-control",
    "title": "00-welcome",
    "section": "Why do we need version control?",
    "text": "Why do we need version control?\n\nPhD Comics"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#git-and-github-tips",
    "href": "content/lectures/00-welcome-slides.html#git-and-github-tips",
    "title": "00-welcome",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\nGit is a version control system – like “Track Changes” feature Google Docs…but optimized for code. GitHub is the home for your Git-based projects on the internet – like Drive with additional features for code.\n\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\n\n\n\n\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\n\n\n\n\nResource: happygitwithr.com: book for working with git in R; Some content is beyond the scope of this course, but it’s a good resource"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#lets-take-a-tour-git-github",
    "href": "content/lectures/00-welcome-slides.html#lets-take-a-tour-git-github",
    "title": "00-welcome",
    "section": "Let’s take a tour – Git / GitHub",
    "text": "Let’s take a tour – Git / GitHub\nWe’ll cover this time permitting, you’ll see it again in lab this week\nConcepts introduced:\n\nConnect an R project to Github repository\nWorking with a local and remote repository\nCommitting, Pushing and Pulling\n\nThere is a bit more of GitHub that we’ll use in this class, but for today this is enough."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#documentation",
    "href": "content/lectures/00-welcome-slides.html#documentation",
    "title": "00-welcome",
    "section": "Documentation",
    "text": "Documentation\nConsider ggplot2 (a package we’ll learn a lot)\n\n\nOfficial documentation (CRAN): https://cran.r-project.org/web/packages/ggplot2/index.html\nCode (Github): https://github.com/tidyverse/ggplot2\nDocumentation: https://ggplot2.tidyverse.org/reference/index.html\nSpecific Function: https://ggplot2.tidyverse.org/reference/geom_point.html"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#chatgpt-what-it-could-look-like",
    "href": "content/lectures/00-welcome-slides.html#chatgpt-what-it-could-look-like",
    "title": "00-welcome",
    "section": "ChatGPT: What it could look like",
    "text": "ChatGPT: What it could look like\nImagine: You’ve been asked to carry out a number of wrangling operations on a dataset and make a plot…\n\n[DEMO]"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#additional-help",
    "href": "content/lectures/00-welcome-slides.html#additional-help",
    "title": "00-welcome",
    "section": "Additional help",
    "text": "Additional help\n\nclassmates\ncourse staff (OH, Piazza, class, lab)"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#recap",
    "href": "content/lectures/00-welcome-slides.html#recap",
    "title": "00-welcome",
    "section": "Recap",
    "text": "Recap\nCan you answer these questions?\n\nWhat is R vs RStudio?\nWhat are RStudio Projects?\nWhat is version control, and why do we care?\nWhat is git vs GitHub (and do I need to care)?"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#additional-git-resources",
    "href": "content/lectures/00-welcome-slides.html#additional-git-resources",
    "title": "00-welcome",
    "section": "Additional git Resources",
    "text": "Additional git Resources\nVersion Control (git and GitHub):\n\nGetting Started with git\nGitHub Guide\nGitHub Desktop App Tutorial\nGit Command Line Resource\nUsing git from the command line\n\nInstalling and using git (Part 1), by COGS 108 TA Ganesh (youtube, 22min tutorial)\nmerge conflicts and branching (Part 2), by IA Shubham Kulkarni (youtube, 8min tutorial)\n\nUsing git with GitHub Desktop, by COGS 108 TA Sidharth Suresh (youtube, 13min tutorial)\nGIT & GITHUB TUTORIAL, from edureka!\n\nwith notes from COGS 18/108 TA Holly(Yueying) Dong"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#slides-to-pdf",
    "href": "content/lectures/00-welcome-slides.html#slides-to-pdf",
    "title": "00-welcome",
    "section": "Slides to PDF",
    "text": "Slides to PDF\n\nToggle into Print View using the Esc key (or using the Navigation Menu)\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save 🎉\n\n\n\nInstructions from quarto documentation"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#whos-in-this-class",
    "href": "content/lectures/00-welcome-slides.html#whos-in-this-class",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster <- read_sheet('10kG09t5Uvjy2zLt4sToHvveBRnqYXTwfaAhPpgEFr3s')\n\nggplot(roster, aes(x = College)) +\n  geom_bar() +\n  labs(title = \"COGS 137\") +\n  theme_bw(base_size = 14) + \n  theme(plot.title.position = \"plot\")\n\n\n\n\n\n\nNote: This code will not run for you because you don’t have access to the roster for this course."
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#whos-in-this-class-1",
    "href": "content/lectures/00-welcome-slides.html#whos-in-this-class-1",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster |>\n  mutate(major = substr(Major, 1, 2)) |>\n  ggplot(aes(fct_infreq(major))) + \n  geom_bar() +\n  labs(title = \"COGS 137\",\n       x = \"Major\") +\n  theme_bw(base_size = 12) + \n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#whos-in-this-class-2",
    "href": "content/lectures/00-welcome-slides.html#whos-in-this-class-2",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster |>\n  ggplot(aes(fct_relevel(Level, \"SO\", \"JR\", \"SR\"))) +\n  geom_bar() +\n  labs(title = \"COGS 137\",\n       x = \"Level\") +\n  theme_bw(base_size = 14) + \n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "content/lectures/00-welcome-slides.html#id-like-to-know-more",
    "href": "content/lectures/00-welcome-slides.html#id-like-to-know-more",
    "title": "00-welcome",
    "section": "I’d like to know more!",
    "text": "I’d like to know more!\n(required)Student Survey - complete by Tuesday at 11:59 PM.\nThis is required and completion will be used for CAA/#finaid. DO complete this even if you’re on the waitlist, please.\n\n(optional) Daily Post-Lecture Feedback\n\nopportunity to reflect on learning\nopportunity to ask questions (I will read and answer these.)\nopportunity for extra credit on final project\n\n\n\n\n\nhttps://cogs137.github.io/website/\n\n\n\nNote: Links to both surveys are also on Canvas. I will try to remind you at the end of lecture, but I’ll probably forget. Feel free to remind me/one another!"
  },
  {
    "objectID": "content/lectures/00-welcome.html",
    "href": "content/lectures/00-welcome.html",
    "title": "00-welcome",
    "section": "",
    "text": "Practical Data Science in R\nPlease take one green sticky and one pink sticky as they come around. If you’re able, try and save these. We’ll use them most classes. (But, I’ll always have extra!)\n\n\n\n\n\n\n\n\nDescribe what this class is\nDescribe how the class will run\nGo over the tooling for this course: R, RStudio, GitHub\n\n\n\n\n : R is a statistical programming language.\nWhile R has most/all of the functionality of YFPL (your favorite programming language), it was designed for the specific use of analyzing data.\n\n\n\n: Data science is the scientific process of using data to answer interesting questions and/or solve important problems.\n\n\n\n\n\nProgram at the introductory level in the R statistical programming language\nEmploy the tidyverse suite of packages to interact with, wrangle, visualize, and model data\nExplain & apply statistical concepts (estimation, linear regression, logistic regression, etc.) for data analysis\nCommunicate data science projects through effective visualization, oral presentation, and written reports\n\n\n\n\n\nShannon Ellis: Associate Teaching Professor, Mom & wife, volleyball-obsessed, and baking & cooking lover\n   sellis@ucsd.edu     shanellis.com    MOS 0204     Tu/Th 2-3:20PM (Lab: Fri 3-3:50PM)\n\n\n\n\n\n\nInstructor\nShannon Ellis\nsellis@ucsd.edu\nWed 11A-12P\nVirtual (see canvas)\n\n\n\n\n\nTh 12:50-1:50\nCSB 243\n\n\nTA\nKunal Rustagi\n\nTime TBD\nLocation TBD\n\n\nIAs\nShenova Davis\n\nTime TBD\nLocation TBD\n\n\n\n\n\n\n\n\n\nKunal Rustagi (TA)\nShenova Davis (IA)\n\n\n\n\n\n\n\n\n\n\n\n\nEverything you want to know about the course, and everything you will need for the course will be posted at: https://cogs137.github.io/website/\n\n\nIs this an intro CS course? No.\nWill we be doing computing? Yes.\nWhat computing language will we learn? R.\nIs this an intro stats course? No.\nWill we be doing stats? Yes.\nAre there any prerequisites? Yes, an intro statistics course!\n\n\n\n\n\n\n\n\n\nNope! The first few weeks of the course will be all about getting comfortable using the R programming language!\n After that, we’ll focus on delving into interesting statistical analyses through case studies.\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/00-welcome.html#the-general-plan",
    "href": "content/lectures/00-welcome.html#the-general-plan",
    "title": "00-welcome",
    "section": "The General Plan",
    "text": "The General Plan\n\nWeeks 1-4: Learn to program in the tidyverse in R\nWeeks 5-10: Communication, Data Analysis, Statistics, & Case Studies (two Case Studies)\n\n\nNote: This course is back-loaded. But, that’s when group work happens."
  },
  {
    "objectID": "content/lectures/00-welcome.html#the-nitty-gritty",
    "href": "content/lectures/00-welcome.html#the-nitty-gritty",
    "title": "00-welcome",
    "section": "The Nitty Gritty",
    "text": "The Nitty Gritty\n\nLectureIn-personWaitlistLab & OHMaterials\n\n\nClass Meetings\n\nInteractive\nLectures & lots of learn-by-doing\nBring your laptop to class every day\n\n\n\nIn-person, synchronous learning\n\nI will be teaching (so long as I’m healthy and have child care) in person.\nLectures and lab will be podcast.\nAttendance will be incentivized using a daily participation survey.\nIf you’re not feeling well, please stay home. I will do the same.\nExam will be take-home.\n\n\n\nThe (Dreaded) Waitlist\n\nCourse enrollment is supposed to be 50 for this course\nThere are 72 people currently enrolled\nI don’t control the waitlist (cogsadvising@ucsd.edu does)\nI’d anticipate our staff adding 3-5 people from the waitlist (but cannot guarantee this)\n\n\n\nLab & Office Hours\n\nOffice hours begin week 1\n\nProf: Tu: 3:30-4:30 (drop-in); W 11-12 (10 min slots; appt.)\n\nLab begins week 1 (next Friday)\n\nit’s not in a computer lab, so you’ll need to bring your own\ndetails about labs covered on Tues and in lab\ntypically labs will be released Monday and due Friday\n\nI will hang out after class today for questions/concerns from students\n\n\n\nCourse Materials\n\nTextbooks are free and available online\nCourse platforms:\n\nWebsite : schedule, policies, due dates, etc.\nGitHub : retrieving assignments, labs, exams, etc.\ndatahub : completing assignments, labs, exams etc.\nCanvas : grades, course-specific links\nPiazza : Q&A"
  },
  {
    "objectID": "content/lectures/00-welcome.html#diversity-inclusion",
    "href": "content/lectures/00-welcome.html#diversity-inclusion",
    "title": "00-welcome",
    "section": "Diversity & Inclusion:",
    "text": "Diversity & Inclusion:\nGoal: every student be well-served by this course\n\nPhilosophy: The diversity of students in this class is a huge asset to our learning community; our differences provide opportunities for learning and understanding.\n\n\nPlan: Present course materials that are conscious of and respectful to diversity (gender identity, sexuality, disability, age, socioeconomic status, ethnicity, race, nationality, religion, politics, and culture)\n\n\nBut… if I ever fall short or if you ever have suggestions for improvement, please do share with me! There is also an anonymous Google Form if you’re more comfortable there."
  },
  {
    "objectID": "content/lectures/00-welcome.html#a-new-ish-course",
    "href": "content/lectures/00-welcome.html#a-new-ish-course",
    "title": "00-welcome",
    "section": "A new-ish course!",
    "text": "A new-ish course!\n\nOffered twice previously\nIf something doesn’t make sense, tell me!\nIf you’ve got feedback/suggestions, I’m all ears!\n\n\nChanges since last iteration (based on feedback):\n\nspread out second half\nlikely changing the heaviness of a case study\nadd in communication to public portion\none fewer HW assignments"
  },
  {
    "objectID": "content/lectures/00-welcome.html#how-to-get-help",
    "href": "content/lectures/00-welcome.html#how-to-get-help",
    "title": "00-welcome",
    "section": "How to get help",
    "text": "How to get help\n\nLab\nOffice Hours\nPiazza\n\n\nA few (Piazza) guidelines:\n1. No duplicates.\n2. Public posts are best.\n3. Posts should include your question, what you've tried so far, & resources used.\n4. Helping others is encouraged.\n5. No assignment code in public posts.\n6. We're not robots."
  },
  {
    "objectID": "content/lectures/00-welcome.html#the-r-community",
    "href": "content/lectures/00-welcome.html#the-r-community",
    "title": "00-welcome",
    "section": " The R Community",
    "text": "The R Community\n\n\n\nR Rollercoaster\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/00-welcome.html#academic-integrity",
    "href": "content/lectures/00-welcome.html#academic-integrity",
    "title": "00-welcome",
    "section": "Academic integrity",
    "text": "Academic integrity\nDon’t cheat.\n\nTeamwork is allowed, but you should be able to answer “Yes” to each of the following:\n\nCan I explain each piece of code and each analysis carried out in what I’m submitting?\nCould I reproduce this code/analysis on my own?\n\n\n\nThe Internet is a great resource. Cite your sources.\n\n\nTeamwork is not allowed on your midterm. It is open-notes and open-Google/ChatGPT. You cannot discuss the questions on the exam with anyone."
  },
  {
    "objectID": "content/lectures/00-welcome.html#when-to-can-i-use-chatgptllms",
    "href": "content/lectures/00-welcome.html#when-to-can-i-use-chatgptllms",
    "title": "00-welcome",
    "section": "When To (Can I) Use ChatGPT/LLMs?",
    "text": "When To (Can I) Use ChatGPT/LLMs?\nFor anything in this course."
  },
  {
    "objectID": "content/lectures/00-welcome.html#how-to-use-chatgptllms",
    "href": "content/lectures/00-welcome.html#how-to-use-chatgptllms",
    "title": "00-welcome",
    "section": "How To Use ChatGPT/LLMs",
    "text": "How To Use ChatGPT/LLMs\nProbably never first or right away.\n\nTo learn: Think first. Try first. Then use external resources.\n\n\nAlways read/think about/understand the output."
  },
  {
    "objectID": "content/lectures/00-welcome.html#chatgpt-what-to-avoid",
    "href": "content/lectures/00-welcome.html#chatgpt-what-to-avoid",
    "title": "00-welcome",
    "section": "ChatGPT: What to Avoid",
    "text": "ChatGPT: What to Avoid\n\n\nOver-reliance (thwarts learning)\nHaving to look everything up (wastes time)\nLeaving tasks to the last minute (can lead to bad decisions/academic integrity issues)\nTaking the output without thinking (thwarts learning; limits critical thinking practice)\nUsing it right away for brainstorming ideas (limits ideas generated)"
  },
  {
    "objectID": "content/lectures/00-welcome.html#course-components",
    "href": "content/lectures/00-welcome.html#course-components",
    "title": "00-welcome",
    "section": "Course components:",
    "text": "Course components:\n\n\nLabs (8): Individual submission; graded on effort\nHomework (3): Individual submission; graded on correctness\nExam (1): Individual completion & submission, take-home midterm\nCase Studies (2): Team submission, technical analysis report\nFinal Project (1) : Team submission, due Tues of finals week"
  },
  {
    "objectID": "content/lectures/00-welcome.html#grading",
    "href": "content/lectures/00-welcome.html#grading",
    "title": "00-welcome",
    "section": "Grading",
    "text": "Grading\nYour final grade will be comprised of the following:\n\n\n\nAssignment (#)\n% of grade\n\n\n\n\nLabs (8)\n16%\n\n\nHomework (4)\n32%\n\n\nMidterm (1)\n15%\n\n\nCase Study Projects* (2)\n20%\n\n\nFinal project* (1)\n17%\n\n\n\n* indicates group submission"
  },
  {
    "objectID": "content/lectures/00-welcome.html#latemissed-work-policy",
    "href": "content/lectures/00-welcome.html#latemissed-work-policy",
    "title": "00-welcome",
    "section": "Late/missed work policy",
    "text": "Late/missed work policy\n\nHomework and case study projects: accepted up to 3 days (72 hours) after the assigned deadline for a 25% deduction\nNo late deadlines for labs, the exam, or the final project\n\n\nNote: Prof Ellis is a reasonable person; reach out to her if you have an extenuating circumstance at any point in the quarter."
  },
  {
    "objectID": "content/lectures/00-welcome.html#datahub",
    "href": "content/lectures/00-welcome.html#datahub",
    "title": "00-welcome",
    "section": "Datahub",
    "text": "Datahub\nDatahub is a platform hosted by UCSD that gives students access to computational resources.\nThis means that while you’ll be typing on your keyboard, you’ll be using UCSD’s computers in this class.\nWebsite: https://datahub.ucsd.edu/\n\nLaunch Environment\nWhen working on “stuff” for this course, select the COGS 137 environment.\n ## Datahub Usage\nQ: Do I have to use datahub?\nA: Nope. You could download and install all the packages we use and complete the course locally! However, many packages have already been installed for you on datahub, so it will be a tiny bit more work up front…but you won’t be dependent on the internet/datahub!"
  },
  {
    "objectID": "content/lectures/00-welcome.html#toolkit",
    "href": "content/lectures/00-welcome.html#toolkit",
    "title": "00-welcome",
    "section": "Toolkit",
    "text": "Toolkit\n\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) R Markdown\nVersion control \\(\\rightarrow\\) Git / GitHub\nThe Internet (Google/ChatGPT/etc.)"
  },
  {
    "objectID": "content/lectures/00-welcome.html#r-and-rstudio",
    "href": "content/lectures/00-welcome.html#r-and-rstudio",
    "title": "00-welcome",
    "section": "R and RStudio",
    "text": "R and RStudio\n\nR/RStudioTourTryR packages\n\n\nR & RStudio\n\nR is a statistical programming language\nRStudio is a convenient interface for R (an integreated development environment, IDE)\n\n\n\n\n[DEMO]\n\nConcepts introduced:\n\nConsole\nUsing R as a calculator\nEnvironment\nLoading and viewing a data frame\nAccessing a variable in a data frame\nR functions\n\n\n\nYour Turn\n\nLogin to datahub\nCarry out a mathematical operation in the console\nView the airquality dataframe\nAccess a column from the airquality dataframe\nCalculate the median for one of the numeric columns\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question.\n\n\n\nPackages are the fundamental units of reproducible R code. They include reusable R functions, the documentation that describes how to use them, and sample data 1\nAs of Sept 2023, there are ~19,941 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!"
  },
  {
    "objectID": "content/lectures/00-welcome.html#what-is-the-tidyverse",
    "href": "content/lectures/00-welcome.html#what-is-the-tidyverse",
    "title": "00-welcome",
    "section": "What is the Tidyverse?",
    "text": "What is the Tidyverse?\n\n\n\n\n\ntidyverse.org\n\n\nThe tidyverse is an opinionated collection of R packages designed for data science.\nAll packages share an underlying philosophy and a common syntax."
  },
  {
    "objectID": "content/lectures/00-welcome.html#rstudio-projects3",
    "href": "content/lectures/00-welcome.html#rstudio-projects3",
    "title": "00-welcome",
    "section": "RStudio Projects3",
    "text": "RStudio Projects3\n\nBuilt-in functionality to keep all files for a single project organized"
  },
  {
    "objectID": "content/lectures/00-welcome.html#r-markdown",
    "href": "content/lectures/00-welcome.html#r-markdown",
    "title": "00-welcome",
    "section": "R Markdown",
    "text": "R Markdown\n\nFully reproducible reports – each time you knit, the document is executed from top to bottom\nSimple markdown syntax for text\nCode goes in chunks, defined by three backticks, narrative goes outside of chunks"
  },
  {
    "objectID": "content/lectures/00-welcome.html#r-markdown-tips",
    "href": "content/lectures/00-welcome.html#r-markdown-tips",
    "title": "00-welcome",
    "section": "R Markdown tips",
    "text": "R Markdown tips\n\nKeep the R Markdown cheat sheet and Markdown Quick Reference (Help -> Markdown Quick Reference) handy, we’ll refer to it often as the course progresses\nThe workspace of your R Markdown document is separate from the Console\n\n\n\n[DEMO]"
  },
  {
    "objectID": "content/lectures/00-welcome.html#how-will-we-use-r-markdown",
    "href": "content/lectures/00-welcome.html#how-will-we-use-r-markdown",
    "title": "00-welcome",
    "section": "How will we use R Markdown?",
    "text": "How will we use R Markdown?\n\nEvery lab / midterm / project / homework / notes / etc. is an R Markdown document\nYou’ll always have a template R Markdown document to start with\nThe amount of scaffolding in the template will decrease over the quarter"
  },
  {
    "objectID": "content/lectures/00-welcome.html#collaboration-git-github",
    "href": "content/lectures/00-welcome.html#collaboration-git-github",
    "title": "00-welcome",
    "section": "Collaboration: Git & GitHub",
    "text": "Collaboration: Git & GitHub\n\nThe statistical programming language we’ll use is R\nThe software we use to interface with R is RStudio\nBut how do I get you the course materials that you can build on for your assignments?\n\nI’m not going to email you documents, that would be a mess!"
  },
  {
    "objectID": "content/lectures/00-welcome.html#version-control",
    "href": "content/lectures/00-welcome.html#version-control",
    "title": "00-welcome",
    "section": "Version control",
    "text": "Version control\n\nWe introduced GitHub as a platform for collaboration\nBut it’s much more than that…\nIt’s actually designed for version control"
  },
  {
    "objectID": "content/lectures/00-welcome.html#versioning",
    "href": "content/lectures/00-welcome.html#versioning",
    "title": "00-welcome",
    "section": "Versioning",
    "text": "Versioning\n\n\n\nLego versions"
  },
  {
    "objectID": "content/lectures/00-welcome.html#versioning-1",
    "href": "content/lectures/00-welcome.html#versioning-1",
    "title": "00-welcome",
    "section": "Versioning",
    "text": "Versioning\nwith human readable messages\n\n\n\nLego versions with commit messages"
  },
  {
    "objectID": "content/lectures/00-welcome.html#why-do-we-need-version-control",
    "href": "content/lectures/00-welcome.html#why-do-we-need-version-control",
    "title": "00-welcome",
    "section": "Why do we need version control?",
    "text": "Why do we need version control?\n\n\n\nPhD Comics"
  },
  {
    "objectID": "content/lectures/00-welcome.html#git-and-github-tips",
    "href": "content/lectures/00-welcome.html#git-and-github-tips",
    "title": "00-welcome",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\nGit is a version control system – like “Track Changes” feature Google Docs…but optimized for code. GitHub is the home for your Git-based projects on the internet – like Drive with additional features for code.\n\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\n\n\n\n\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\n\n\n\nResource: happygitwithr.com: book for working with git in R; Some content is beyond the scope of this course, but it’s a good resource"
  },
  {
    "objectID": "content/lectures/00-welcome.html#lets-take-a-tour-git-github",
    "href": "content/lectures/00-welcome.html#lets-take-a-tour-git-github",
    "title": "00-welcome",
    "section": "Let’s take a tour – Git / GitHub",
    "text": "Let’s take a tour – Git / GitHub\nWe’ll cover this time permitting, you’ll see it again in lab this week\nConcepts introduced:\n\nConnect an R project to Github repository\nWorking with a local and remote repository\nCommitting, Pushing and Pulling\n\nThere is a bit more of GitHub that we’ll use in this class, but for today this is enough."
  },
  {
    "objectID": "content/lectures/00-welcome.html#documentation",
    "href": "content/lectures/00-welcome.html#documentation",
    "title": "00-welcome",
    "section": "Documentation",
    "text": "Documentation\nConsider ggplot2 (a package we’ll learn a lot)\n\n\nOfficial documentation (CRAN): https://cran.r-project.org/web/packages/ggplot2/index.html\nCode (Github): https://github.com/tidyverse/ggplot2\nDocumentation: https://ggplot2.tidyverse.org/reference/index.html\nSpecific Function: https://ggplot2.tidyverse.org/reference/geom_point.html"
  },
  {
    "objectID": "content/lectures/00-welcome.html#chatgpt-what-it-could-look-like",
    "href": "content/lectures/00-welcome.html#chatgpt-what-it-could-look-like",
    "title": "00-welcome",
    "section": "ChatGPT: What it could look like",
    "text": "ChatGPT: What it could look like\nImagine: You’ve been asked to carry out a number of wrangling operations on a dataset and make a plot…\n\n[DEMO]"
  },
  {
    "objectID": "content/lectures/00-welcome.html#additional-help",
    "href": "content/lectures/00-welcome.html#additional-help",
    "title": "00-welcome",
    "section": "Additional help",
    "text": "Additional help\n\nclassmates\ncourse staff (OH, Piazza, class, lab)"
  },
  {
    "objectID": "content/lectures/00-welcome.html#recap",
    "href": "content/lectures/00-welcome.html#recap",
    "title": "00-welcome",
    "section": "Recap",
    "text": "Recap\nCan you answer these questions?\n\nWhat is R vs RStudio?\nWhat are RStudio Projects?\nWhat is version control, and why do we care?\nWhat is git vs GitHub (and do I need to care)?"
  },
  {
    "objectID": "content/lectures/00-welcome.html#additional-git-resources",
    "href": "content/lectures/00-welcome.html#additional-git-resources",
    "title": "00-welcome",
    "section": "Additional git Resources",
    "text": "Additional git Resources\n\nVersion Control (git and GitHub):\n\nGetting Started with git\nGitHub Guide\nGitHub Desktop App Tutorial\nGit Command Line Resource\nUsing git from the command line\n\nInstalling and using git (Part 1), by COGS 108 TA Ganesh (youtube, 22min tutorial)\nmerge conflicts and branching (Part 2), by IA Shubham Kulkarni (youtube, 8min tutorial)\n\nUsing git with GitHub Desktop, by COGS 108 TA Sidharth Suresh (youtube, 13min tutorial)\nGIT & GITHUB TUTORIAL, from edureka!\n\nwith notes from COGS 18/108 TA Holly(Yueying) Dong"
  },
  {
    "objectID": "content/lectures/00-welcome.html#slides-to-pdf",
    "href": "content/lectures/00-welcome.html#slides-to-pdf",
    "title": "00-welcome",
    "section": "Slides to PDF",
    "text": "Slides to PDF\n\nToggle into Print View using the Esc key (or using the Navigation Menu)\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save 🎉\n\n\n\nInstructions from quarto documentation"
  },
  {
    "objectID": "content/lectures/00-welcome.html#whos-in-this-class",
    "href": "content/lectures/00-welcome.html#whos-in-this-class",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster <- read_sheet('10kG09t5Uvjy2zLt4sToHvveBRnqYXTwfaAhPpgEFr3s')\n\nggplot(roster, aes(x = College)) +\n  geom_bar() +\n  labs(title = \"COGS 137\") +\n  theme_bw(base_size = 14) + \n  theme(plot.title.position = \"plot\")\n\n\n\n\n\n\nNote: This code will not run for you because you don’t have access to the roster for this course."
  },
  {
    "objectID": "content/lectures/00-welcome.html#whos-in-this-class-1",
    "href": "content/lectures/00-welcome.html#whos-in-this-class-1",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster |>\n  mutate(major = substr(Major, 1, 2)) |>\n  ggplot(aes(fct_infreq(major))) + \n  geom_bar() +\n  labs(title = \"COGS 137\",\n       x = \"Major\") +\n  theme_bw(base_size = 12) + \n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "content/lectures/00-welcome.html#whos-in-this-class-2",
    "href": "content/lectures/00-welcome.html#whos-in-this-class-2",
    "title": "00-welcome",
    "section": "Who’s in this class?",
    "text": "Who’s in this class?\n\nroster |>\n  ggplot(aes(fct_relevel(Level, \"SO\", \"JR\", \"SR\"))) +\n  geom_bar() +\n  labs(title = \"COGS 137\",\n       x = \"Level\") +\n  theme_bw(base_size = 14) + \n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "content/lectures/00-welcome.html#id-like-to-know-more",
    "href": "content/lectures/00-welcome.html#id-like-to-know-more",
    "title": "00-welcome",
    "section": "I’d like to know more!",
    "text": "I’d like to know more!\n(required)Student Survey - complete by Tuesday at 11:59 PM.\nThis is required and completion will be used for CAA/#finaid. DO complete this even if you’re on the waitlist, please.\n\n(optional) Daily Post-Lecture Feedback\n\nopportunity to reflect on learning\nopportunity to ask questions (I will read and answer these.)\nopportunity for extra credit on final project\n\n\n\n\n\nNote: Links to both surveys are also on Canvas. I will try to remind you at the end of lecture, but I’ll probably forget. Feel free to remind me/one another!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#ad-computing-paths",
    "href": "content/lectures/01-intro-to-r-slides.html#ad-computing-paths",
    "title": "01-intro-to-r",
    "section": "[ad] Computing Paths",
    "text": "[ad] Computing Paths\n\nhttps://computingpaths.ucsd.edu/"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#ad-the-basement",
    "href": "content/lectures/01-intro-to-r-slides.html#ad-the-basement",
    "title": "01-intro-to-r",
    "section": "[ad] The Basement",
    "text": "[ad] The Basement"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#ad-calpirg",
    "href": "content/lectures/01-intro-to-r-slides.html#ad-calpirg",
    "title": "01-intro-to-r",
    "section": "[ad] CALPIRG",
    "text": "[ad] CALPIRG\n\nAPPLY NOW: Protect the environment and make social change\nCALPIRG Students is a student organization here that works to protect the environment, make college more affordable, and promote civic engagement. Last Fall we helped nearly 10,000 students register to vote in California and got the UCs to release new policy to phase out single-use plastics to protect our oceans! SIGN UP TO HELP NOW\nNow, we are working to tackle the biggest problem facing our generation - climate change. Coming off another record-setting summer of hot temperatures, it’s clear we need to take strong, swift action to reduce the impacts of climate change. That’s why we are building support from students across the state to call for 100% clean energy UC-wide - for cars, buses, buildings, lights, and more! Fill out this interest form to learn more!\nAs a volunteer or intern with CALPIRG you can:\nWork with the media and help organize events like a Solar-Powered Concert and climate week of action\nIncrease voting accessibility and voter turnout in elections\nBring down the cost of textbooks\nProtect wildlife like whales and sea otters in the Pacific\nAnd more!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#qa",
    "href": "content/lectures/01-intro-to-r-slides.html#qa",
    "title": "01-intro-to-r",
    "section": "Q&A",
    "text": "Q&A\nQ: How are groups formed for the projects?\nA: I form them randomly for the two case studies and students get to choose their own groups for the final project.\nQ: I’m curious about what the workload would be like for the case studies.\nA: We’ll discuss this when the time comes in detail but for now, students are presented with a lot of the starter code for the case studies. You and your group mates have to get teh code running, add explanations, and “extend” the case study, meaning add something meaningful onto what was presented.\nQ: Will this course go into advanced topics in tidyverse?\nA: We will certainly go beyond the basic dplyr verbs and cover multiple packages in the tidyverse, but we won’t be able to cover everything.\nQ: Would it be possible to have access to the third Case Study just to work on our own time?\nA: Yup! I’ll you all in the direction of OpenCaseStudies, which is a resource I’ll be using for 1 of the 2 case studies this quarter, and that we used for all case studies previously.\nQ: How many homework assignments are there? Some slides said 3, some said 4.\nA: Apologies. There are 3. (There were previously 4 but I removed one. Slides have been updated.)\nQ: Could we just sit in for lectures? Can I keep watching lectures?\nA: Yup - this would be fine, so long as everyone enrolled had a seat. And, the podcasts are open to anyone!\nQ: If we decide to do our projects and homework locally, how can we download/install the packages necessary for it?\nA: This is covered in your first lab!\nQ: I’m generally curious on how the language R is used in real world settings after college. What are its specific uses and what are the better ways to learn the language to maximize its utility. Also, how does this language differ from python in the data science realm.\nA: Great question that we’ll cover throughout the course. However, breifly here, R is most heavily used by individuals who do more statistics, who work in biology, psychology or economics, and/or who analyze data regularly.\nQ: What is the advantage of using R over other programming languages to do data science tasks? How much is R used for data science in the real world?\nA: Within the tidyverse and in RStudio, the advantage is the cohesiveness of the tools - once you gain familiarity you can often intuit how to use another tool in the tidyverse. R is used for data science across tons of companies; however, across industries. its use is not as widespread as Python."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#course-announcements",
    "href": "content/lectures/01-intro-to-r-slides.html#course-announcements",
    "title": "01-intro-to-r",
    "section": "Course Announcements",
    "text": "Course Announcements\nDue Dates:\n\nStudent survey “due” today 11:59 PM\nLab 01 due Friday (11:59 PM)\nLecture Participation survey “due” after class\n\nWaitlist (Non)Update: Staff are seeing what options there are. A few people got an email from Kasey Chiang (k4chiang@ucsd.edu) to drop and then enroll. This is legitimate. Follow those instructions."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#agenda",
    "href": "content/lectures/01-intro-to-r-slides.html#agenda",
    "title": "01-intro-to-r",
    "section": "Agenda",
    "text": "Agenda\n\nVariables\nOperators\nData in R\nRMarkdown"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#variables-assignment-1",
    "href": "content/lectures/01-intro-to-r-slides.html#variables-assignment-1",
    "title": "01-intro-to-r",
    "section": "Variables & Assignment",
    "text": "Variables & Assignment\nVariables are how we store information so that we can access it later.\n\nVariables are created and stored using the assignment operator <-\n\nfirst_variable <- 3\n\nThe above stores the value 3 in the variable first_variable\n\n\nNote: Other programming languages use = for assignment. R also uses that for assignment, but it is more typical to see <- in R code, so we’ll stick with that.\n\n\nThis means that if we ever want to reference the information stored in that variable later, we can “call” (mean, type in our code) the variable’s name:\n\nfirst_variable\n\n[1] 3"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#variable-type",
    "href": "content/lectures/01-intro-to-r-slides.html#variable-type",
    "title": "01-intro-to-r",
    "section": "Variable Type",
    "text": "Variable Type\n\nEvery variable you create in R will be of a specific type.\n\n\n\nThe type of the variable is determined dynamically on assignment.\n\n\n\n\nDetermining the type of a variable with class():\n\n\nclass(first_variable)\n\n[1] \"numeric\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#basic-variable-types",
    "href": "content/lectures/01-intro-to-r-slides.html#basic-variable-types",
    "title": "01-intro-to-r",
    "section": "Basic Variable Types",
    "text": "Basic Variable Types\n\n\n\n\n\n\n\n\nVariable Type\nExplanation\nExample\n\n\n\n\ncharacter\nstores a string\n\"cogs137\", \"hi!\"\n\n\nnumeric\nstores whole numbers and decimals\n9, 9.29\n\n\ninteger\nspecifies integer\n9L (the L specifies this is an integer)\n\n\nlogical\nBooleans\nTRUE, FALSE\n\n\nlist\nstore multiple elements\nlist(7, \"a\", TRUE)\n\n\n\nNote: There are many more. We’ll get to some but not all in this course."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#logical-character",
    "href": "content/lectures/01-intro-to-r-slides.html#logical-character",
    "title": "01-intro-to-r",
    "section": "logical & character",
    "text": "logical & character\nlogical - Boolean values TRUE and FALSE\n\nclass(TRUE)\n\n[1] \"logical\"\n\n\n\ncharacter - character strings\n\nclass(\"hello\")\n\n[1] \"character\"\n\nclass('students') # equivalent...but we'll use double quotes!\n\n[1] \"character\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#numeric-double-integer",
    "href": "content/lectures/01-intro-to-r-slides.html#numeric-double-integer",
    "title": "01-intro-to-r",
    "section": "numeric: double & integer",
    "text": "numeric: double & integer\ndouble - floating point numerical values (default numerical type)\n\nclass(1.335)\n\n[1] \"numeric\"\n\nclass(7)\n\n[1] \"numeric\"\n\n\n\ninteger - integer numerical values (indicated with an L)\n\nclass(7L)\n\n[1] \"integer\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#lists",
    "href": "content/lectures/01-intro-to-r-slides.html#lists",
    "title": "01-intro-to-r",
    "section": "lists",
    "text": "lists\nSo far, every variable has been an atomic vector, meaning it only stores a single piece of information.\n\nLists are 1d objects that can contain any combination of R objects\n\n\n\nmylist <- list(\"A\", 7L, TRUE, 18.4)\nmylist\n\n[[1]]\n[1] \"A\"\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] TRUE\n\n[[4]]\n[1] 18.4\n\n\n\n\nstr(mylist)\n\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#your-turn",
    "href": "content/lectures/01-intro-to-r-slides.html#your-turn",
    "title": "01-intro-to-r",
    "section": "Your Turn",
    "text": "Your Turn\nDefine variables of each of the following types: character, numeric, integer, logical, list\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#functions",
    "href": "content/lectures/01-intro-to-r-slides.html#functions",
    "title": "01-intro-to-r",
    "section": "Functions",
    "text": "Functions\n\nclass() (and View() & median()) were our first functions…but we’ll show a few more.\n\n\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses.\n\n\n\nFunctions are:\n\navailable from base R\navailable from packages you import\ndefined by you\n\n\n\nWe’ll start by getting comfortable with available functions, but in a few days, you’ll learn how to write your own!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#helpful-functions",
    "href": "content/lectures/01-intro-to-r-slides.html#helpful-functions",
    "title": "01-intro-to-r",
    "section": "Helpful Functions",
    "text": "Helpful Functions\n\n\n\nclass() - determine high-level variable type\n\n\nclass(mylist)\n\n[1] \"list\"\n\n\n\nlength()- determine how long an object is\n\n\n# contains 4 elements\nlength(mylist)\n\n[1] 4\n\n\n\n\nstr() - display the structure of an R object\n\n\nstr(mylist)\n\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#coercion",
    "href": "content/lectures/01-intro-to-r-slides.html#coercion",
    "title": "01-intro-to-r",
    "section": "Coercion",
    "text": "Coercion\nR is a dynamically typed language – it will happily convert between the various types without complaint.\n\nc(1, \"Hello\")\n\n[1] \"1\"     \"Hello\"\n\nc(FALSE, 3L)\n\n[1] 0 3\n\nc(1.2, 3L)\n\n[1] 1.2 3.0"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#missing-values",
    "href": "content/lectures/01-intro-to-r-slides.html#missing-values",
    "title": "01-intro-to-r",
    "section": "Missing Values",
    "text": "Missing Values\nR uses NA to represent missing values in its data structures.\n\nclass(NA)\n\n[1] \"logical\"\n\n\n\nOther Special Values\nNaN | Not a number\nInf | Positive infinity\n-Inf | Negative infinity"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#activity",
    "href": "content/lectures/01-intro-to-r-slides.html#activity",
    "title": "01-intro-to-r",
    "section": "Activity",
    "text": "Activity\nWhat is the type of the following vectors? Chat about why they have that type.\n\nc(1, NA+1L, \"C\")\nc(1L / 0, NA)\nc(1:3, 5)\nc(3L, NaN+1L)\nc(NA, TRUE)\n\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#operators-1",
    "href": "content/lectures/01-intro-to-r-slides.html#operators-1",
    "title": "01-intro-to-r",
    "section": "Operators",
    "text": "Operators\nAt its simplest, R is a calculator. To carry out mathematical operations, R uses operators."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#arithmetic-operators",
    "href": "content/lectures/01-intro-to-r-slides.html#arithmetic-operators",
    "title": "01-intro-to-r",
    "section": "Arithmetic Operators",
    "text": "Arithmetic Operators\n\n\n\nOperator\nDescription\n\n\n\n\n+\naddition\n\n\n-\nsubtraction\n\n\n*\nmultiplication\n\n\n/\ndivision\n\n\n^ or **\nexponentiation\n\n\nx %% y\nmodulus (x mod y) 9%%2 is 1\n\n\nx %/% y\ninteger division 9%/%2 is 4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#arithmetic-operators-examples",
    "href": "content/lectures/01-intro-to-r-slides.html#arithmetic-operators-examples",
    "title": "01-intro-to-r",
    "section": "Arithmetic Operators: Examples",
    "text": "Arithmetic Operators: Examples\n\n7 + 6  \n\n[1] 13\n\n2 - 3\n\n[1] -1\n\n4 * 2\n\n[1] 8\n\n9 / 2\n\n[1] 4.5"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#reminder",
    "href": "content/lectures/01-intro-to-r-slides.html#reminder",
    "title": "01-intro-to-r",
    "section": "Reminder",
    "text": "Reminder\nOutput can be stored to a variable\n\nmy_addition <- 7 + 6\n\n\n\nmy_addition\n\n[1] 13"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#comparison-operators",
    "href": "content/lectures/01-intro-to-r-slides.html#comparison-operators",
    "title": "01-intro-to-r",
    "section": "Comparison Operators",
    "text": "Comparison Operators\nThese operators return a Boolean.\n\n\n\nOperator\nDescription\n\n\n\n\n<\nless than\n\n\n<=\nless than or equal to\n\n\n>\ngreater than\n\n\n>=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#comparison-operators-examples",
    "href": "content/lectures/01-intro-to-r-slides.html#comparison-operators-examples",
    "title": "01-intro-to-r",
    "section": "Comparison Operators: Examples",
    "text": "Comparison Operators: Examples\n\n4 < 12\n\n[1] TRUE\n\n4 >= 3\n\n[1] TRUE\n\n6 == 6\n\n[1] TRUE\n\n7 != 6\n\n[1] TRUE"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#your-turn-1",
    "href": "content/lectures/01-intro-to-r-slides.html#your-turn-1",
    "title": "01-intro-to-r",
    "section": "Your Turn",
    "text": "Your Turn\nUse arithmetic and comparison operators to store the value 30 in the variable var_30 and TRUE in the variable true_var.\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#packages",
    "href": "content/lectures/01-intro-to-r-slides.html#packages",
    "title": "01-intro-to-r",
    "section": "Packages",
    "text": "Packages\n\nPackages are installed with the install.packages function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)\n\n\nIn this course, most packages we’ll use have been installed for you already on datahub, so you will only have to load the package in (using library)."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#data-sets-in-r",
    "href": "content/lectures/01-intro-to-r-slides.html#data-sets-in-r",
    "title": "01-intro-to-r",
    "section": "Data “sets” in R",
    "text": "Data “sets” in R\n\n“set” is in quotation marks because it is not a formal data class\nA tidy data “set” can be one of the following types:\n\ntibble\ndata.frame\n\nWe’ll often work with tibbles:\n\nreadr package (e.g. read_csv function) loads data as a tibble by default\ntibbles are part of the tidyverse, so they work well with other packages we are using\nthey make minimal assumptions about your data, so are less likely to cause hard to track bugs in your code"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#data-frames",
    "href": "content/lectures/01-intro-to-r-slides.html#data-frames",
    "title": "01-intro-to-r",
    "section": "Data frames",
    "text": "Data frames\n\nA data frame is the most commonly used data structure in R, they are list of equal length vectors (usually atomic, but can be generic). Each vector is treated as a column and elements of the vectors as rows.\nA tibble is a type of data frame that … makes your life (i.e. data analysis) easier.\nMost often a data frame will be constructed by reading in from a file, but we can create them from scratch.\n\n\ndf <- tibble(x = 1:3, y = c(\"a\", \"b\", \"c\"))\nclass(df)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nglimpse(df)\n\nRows: 3\nColumns: 2\n$ x <int> 1, 2, 3\n$ y <chr> \"a\", \"b\", \"c\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#data-frames-cont.",
    "href": "content/lectures/01-intro-to-r-slides.html#data-frames-cont.",
    "title": "01-intro-to-r",
    "section": "Data frames (cont.)",
    "text": "Data frames (cont.)\n\nattributes(df)\n\n$class\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n$row.names\n[1] 1 2 3\n\n$names\n[1] \"x\" \"y\"\n\n\n\nColumns (variables) in data frames are accessed with $:\n\ndataframe$var_name\n\n\n\n\nclass(df$x)  # access variable type for column\n\n[1] \"integer\"\n\nclass(df$y)  \n\n[1] \"character\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#variable-types",
    "href": "content/lectures/01-intro-to-r-slides.html#variable-types",
    "title": "01-intro-to-r",
    "section": "Variable Types",
    "text": "Variable Types\nData stored in columns can include different kinds of information…which would require a different type (class) of variable to be used in R.\n\n\n\n\nR Data Types:\n\nContinuous: numeric, integer\nDiscrete: factors (we haven’t talked about these yet, but will today!)\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#variable-types-cont.",
    "href": "content/lectures/01-intro-to-r-slides.html#variable-types-cont.",
    "title": "01-intro-to-r",
    "section": "Variable Types (cont.)",
    "text": "Variable Types (cont.)\nSometimes data are non-numeric and store words. Even when that is the case, the data can be conveying different information.\n\n\n\n\nR Data Types:\n\nNominal: character\nOrdinal: factors\nBinary: logical OR numeric OR factors 😱\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#example-cat-lovers",
    "href": "content/lectures/01-intro-to-r-slides.html#example-cat-lovers",
    "title": "01-intro-to-r",
    "section": "Example: Cat lovers",
    "text": "Example: Cat lovers\nA survey asked respondents their name and number of cats. The instructions said to enter the number of cats as a numerical value.\n\n🚨 There is code ahead that we’re not going to discuss in detail today, but we will in coming lectures.\n\ncat_lovers <- read_csv(\"https://raw.githubusercontent.com/COGS137/datasets/main/cat-lovers.csv\")"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#the-data",
    "href": "content/lectures/01-intro-to-r-slides.html#the-data",
    "title": "01-intro-to-r",
    "section": "The Data",
    "text": "The Data\n\ncat_lovers |>\n  datatable()"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#the-question",
    "href": "content/lectures/01-intro-to-r-slides.html#the-question",
    "title": "01-intro-to-r",
    "section": "The Question",
    "text": "The Question\nHow many respondents have a below average number of cats?\n\nGiving it a first shot…\n\ncat_lovers |>\n  summarise(mean = mean(number_of_cats))\n\n# A tibble: 1 × 1\n   mean\n  <dbl>\n1    NA\n\n\n\n\n💡 maybe there is missing data in the number_of_cats column!\nOh why will you still not work??!!\n\ncat_lovers |>\n  summarise(mean_cats = mean(number_of_cats, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1        NA\n\n\n\n\n💡What is the type of the number_of_cats variable?"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#take-a-breath-and-look-at-your-data",
    "href": "content/lectures/01-intro-to-r-slides.html#take-a-breath-and-look-at-your-data",
    "title": "01-intro-to-r",
    "section": "Take a breath and look at your data",
    "text": "Take a breath and look at your data\n\n\nglimpse(cat_lovers)\n\nRows: 60\nColumns: 3\n$ name           <chr> \"Bernice Warren\", \"Woodrow Stone\", \"Willie Bass\", \"Tyro…\n$ number_of_cats <chr> \"0\", \"0\", \"1\", \"3\", \"3\", \"2\", \"1\", \"1\", \"0\", \"0\", \"0\", …\n$ handedness     <chr> \"left\", \"left\", \"left\", \"left\", \"left\", \"left\", \"left\",…"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#lets-take-another-look",
    "href": "content/lectures/01-intro-to-r-slides.html#lets-take-another-look",
    "title": "01-intro-to-r",
    "section": "Let’s take another look",
    "text": "Let’s take another look"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#sometimes-you-need-to-babysit-your-respondents",
    "href": "content/lectures/01-intro-to-r-slides.html#sometimes-you-need-to-babysit-your-respondents",
    "title": "01-intro-to-r",
    "section": "Sometimes you need to babysit your respondents",
    "text": "Sometimes you need to babysit your respondents\n\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n    name == \"Ginger Clark\" ~ 2,\n    name == \"Doug Bass\"    ~ 3,\n    TRUE                   ~ as.numeric(number_of_cats))) \n\n# A tibble: 60 × 3\n   name           number_of_cats handedness\n   <chr>                   <dbl> <chr>     \n 1 Bernice Warren              0 left      \n 2 Woodrow Stone               0 left      \n 3 Willie Bass                 1 left      \n 4 Tyrone Estrada              3 left      \n 5 Alex Daniels                3 left      \n 6 Jane Bates                  2 left      \n 7 Latoya Simpson              1 left      \n 8 Darin Woods                 1 left      \n 9 Agnes Cobb                  0 left      \n10 Tabitha Grant               0 left      \n# ℹ 50 more rows"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#always-respect-check-data-types",
    "href": "content/lectures/01-intro-to-r-slides.html#always-respect-check-data-types",
    "title": "01-intro-to-r",
    "section": "Always respect (& check!) data types",
    "text": "Always respect (& check!) data types\n\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats)) |>\n  summarise(mean_cats = mean(number_of_cats))\n\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1     0.817"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#now-that-we-know-what-were-doing",
    "href": "content/lectures/01-intro-to-r-slides.html#now-that-we-know-what-were-doing",
    "title": "01-intro-to-r",
    "section": "Now that we know what we’re doing…",
    "text": "Now that we know what we’re doing…\n\ncat_lovers <- cat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats))\n\n… store your data in a variable (here we’re overwriting the old cat_lovers tibble)."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#moral-of-the-story",
    "href": "content/lectures/01-intro-to-r-slides.html#moral-of-the-story",
    "title": "01-intro-to-r",
    "section": "Moral of the story",
    "text": "Moral of the story\n\nIf your data does not behave how you expect it to, type coercion upon reading in the data might be the reason.\nGo in and investigate your data, apply the fix, save your data, live happily ever after."
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#r-markdown-tour",
    "href": "content/lectures/01-intro-to-r-slides.html#r-markdown-tour",
    "title": "01-intro-to-r",
    "section": "R Markdown: tour",
    "text": "R Markdown: tour\n\n[DEMO]\n\nBefore we move on…\n   What is the Bechdel test?\n\nThe Bechdel test asks whether a work of fiction features at least two women who talk to each other about something other than a man, and there must be two women named characters.\n\n\nConcepts introduced:\n\nKnitting documents\nR Markdown and (some) R syntax"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#giving-the-demo-a-go",
    "href": "content/lectures/01-intro-to-r-slides.html#giving-the-demo-a-go",
    "title": "01-intro-to-r",
    "section": "Giving the demo a go…",
    "text": "Giving the demo a go…\n\nNavigate to the demo URL (on Canvas)\nAccept the “assignment” (this is NOT graded)\nClone the repo\nEdit the document\nKnit the document\nPush your changes\n\nTry to play around with this after finishing your lab tomorrow!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#recap",
    "href": "content/lectures/01-intro-to-r-slides.html#recap",
    "title": "01-intro-to-r",
    "section": "Recap",
    "text": "Recap\n\nAlways best to think of data as part of a tibble\n\nThis plays nicely with the tidyverse as well\nRows are observations, columns are variables\n\nWhat are the common variable types in R\n\nHow do I create a variable of each type?\nWhen would I use each one?\n\nDo I know how to determine the class/type of a variable?\nCan I explain dynamic typing?\nCan I operate on variables and values using…\n\narithmetic operators?\ncomparison operators?\n\nWhat are dataframes/tibbles? and why are they useful?\nWhat is the difference between installing and loading a package?\nWhat are the components of an R Markdown file?\n\n\n\n\nhttps://cogs137.github.io/website/"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html",
    "href": "content/lectures/01-intro-to-r.html",
    "title": "01-intro-to-r",
    "section": "",
    "text": "https://computingpaths.ucsd.edu/\n\n\n\n\n\n\n\n\n\n\nAPPLY NOW: Protect the environment and make social change\nCALPIRG Students is a student organization here that works to protect the environment, make college more affordable, and promote civic engagement. Last Fall we helped nearly 10,000 students register to vote in California and got the UCs to release new policy to phase out single-use plastics to protect our oceans! SIGN UP TO HELP NOW\nNow, we are working to tackle the biggest problem facing our generation - climate change. Coming off another record-setting summer of hot temperatures, it’s clear we need to take strong, swift action to reduce the impacts of climate change. That’s why we are building support from students across the state to call for 100% clean energy UC-wide - for cars, buses, buildings, lights, and more! Fill out this interest form to learn more!\nAs a volunteer or intern with CALPIRG you can:\nWork with the media and help organize events like a Solar-Powered Concert and climate week of action\nIncrease voting accessibility and voter turnout in elections\nBring down the cost of textbooks\nProtect wildlife like whales and sea otters in the Pacific\nAnd more!\n\n\n\n\nQ: How are groups formed for the projects?\nA: I form them randomly for the two case studies and students get to choose their own groups for the final project.\nQ: I’m curious about what the workload would be like for the case studies.\nA: We’ll discuss this when the time comes in detail but for now, students are presented with a lot of the starter code for the case studies. You and your group mates have to get teh code running, add explanations, and “extend” the case study, meaning add something meaningful onto what was presented.\nQ: Will this course go into advanced topics in tidyverse?\nA: We will certainly go beyond the basic dplyr verbs and cover multiple packages in the tidyverse, but we won’t be able to cover everything.\nQ: Would it be possible to have access to the third Case Study just to work on our own time?\nA: Yup! I’ll you all in the direction of OpenCaseStudies, which is a resource I’ll be using for 1 of the 2 case studies this quarter, and that we used for all case studies previously.\nQ: How many homework assignments are there? Some slides said 3, some said 4.\nA: Apologies. There are 3. (There were previously 4 but I removed one. Slides have been updated.)\nQ: Could we just sit in for lectures? Can I keep watching lectures A: Yup - this would be fine, so long as everyone enrolled had a seat. And, the podcasts are open to anyone!\nQ: If we decide to do our projects and homework locally, how can we download/install the packages necessary for it?\nA: This is covered in your first lab!\nQ: I’m generally curious on how the language R is used in real world settings after college. What are its specific uses and what are the better ways to learn the language to maximize its utility. Also, how does this language differ from python in the data science realm.\nA: Great question that we’ll cover throughout the course. However, breifly here, R is most heavily used by individuals who do more statistics, who work in biology, psychology or economics, and/or who analyze data regularly.\nQ: What is the advantage of using R over other programming languages to do data science tasks? How much is R used for data science in the real world?\nA: Within the tidyverse and in RStudio, the advantage is the cohesiveness of the tools - once you gain familiarity you can often intuit how to use another tool in the tidyverse. R is used for data science across tons of companies; however, across industries. its use is not as widespread as Python.\n\n\n\nDue Dates:\n\nStudent survey “due” today 11:59 PM\nLab 01 due Friday (11:59 PM)\nLecture Participation survey “due” after class\n\nWaitlist (Non)Update: Staff are seeing what options there are.\n\n\n\n\nVariables\nOperators\nData in R\nRMarkdown"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#variables-assignment-1",
    "href": "content/lectures/01-intro-to-r.html#variables-assignment-1",
    "title": "01-intro-to-r",
    "section": "Variables & Assignment",
    "text": "Variables & Assignment\nVariables are how we store information so that we can access it later.\n\nVariables are created and stored using the assignment operator <-\n\nfirst_variable <- 3\n\nThe above stores the value 3 in the variable first_variable\n\n\nNote: Other programming languages use = for assignment. R also uses that for assignment, but it is more typical to see <- in R code, so we’ll stick with that.\n\n\nThis means that if we ever want to reference the information stored in that variable later, we can “call” (mean, type in our code) the variable’s name:\n\nfirst_variable\n\n[1] 3"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#variable-type",
    "href": "content/lectures/01-intro-to-r.html#variable-type",
    "title": "01-intro-to-r",
    "section": "Variable Type",
    "text": "Variable Type\n\nEvery variable you create in R will be of a specific type.\n\n\n\nThe type of the variable is determined dynamically on assignment.\n\n\n\n\nDetermining the type of a variable with class():\n\n\nclass(first_variable)\n\n[1] \"numeric\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#basic-variable-types",
    "href": "content/lectures/01-intro-to-r.html#basic-variable-types",
    "title": "01-intro-to-r",
    "section": "Basic Variable Types",
    "text": "Basic Variable Types\n\n\n\n\n\n\n\n\nVariable Type\nExplanation\nExample\n\n\n\n\ncharacter\nstores a string\n\"cogs137\", \"hi!\"\n\n\nnumeric\nstores whole numbers and decimals\n9, 9.29\n\n\ninteger\nspecifies integer\n9L (the L specifies this is an integer)\n\n\nlogical\nBooleans\nTRUE, FALSE\n\n\nlist\nstore multiple elements\nlist(7, \"a\", TRUE)\n\n\n\nNote: There are many more. We’ll get to some but not all in this course."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#logical-character",
    "href": "content/lectures/01-intro-to-r.html#logical-character",
    "title": "01-intro-to-r",
    "section": "logical & character",
    "text": "logical & character\nlogical - Boolean values TRUE and FALSE\n\nclass(TRUE)\n\n[1] \"logical\"\n\n\n\ncharacter - character strings\n\nclass(\"hello\")\n\n[1] \"character\"\n\nclass('students') # equivalent...but we'll use double quotes!\n\n[1] \"character\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#numeric-double-integer",
    "href": "content/lectures/01-intro-to-r.html#numeric-double-integer",
    "title": "01-intro-to-r",
    "section": "numeric: double & integer",
    "text": "numeric: double & integer\ndouble - floating point numerical values (default numerical type)\n\nclass(1.335)\n\n[1] \"numeric\"\n\nclass(7)\n\n[1] \"numeric\"\n\n\n\ninteger - integer numerical values (indicated with an L)\n\nclass(7L)\n\n[1] \"integer\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#lists",
    "href": "content/lectures/01-intro-to-r.html#lists",
    "title": "01-intro-to-r",
    "section": "lists",
    "text": "lists\nSo far, every variable has been an atomic vector, meaning it only stores a single piece of information.\n\nLists are 1d objects that can contain any combination of R objects\n\n\n\nmylist <- list(\"A\", 7L, TRUE, 18.4)\nmylist\n\n[[1]]\n[1] \"A\"\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] TRUE\n\n[[4]]\n[1] 18.4\n\n\n\n\nstr(mylist)\n\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#your-turn",
    "href": "content/lectures/01-intro-to-r.html#your-turn",
    "title": "01-intro-to-r",
    "section": "Your Turn",
    "text": "Your Turn\nDefine variables of each of the following types: character, numeric, integer, logical, list\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#functions",
    "href": "content/lectures/01-intro-to-r.html#functions",
    "title": "01-intro-to-r",
    "section": "Functions",
    "text": "Functions\n\nclass() (and View() & median()) were our first functions…but we’ll show a few more.\n\n\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses.\n\n\n\nFunctions are:\n\navailable from base R\navailable from packages you import\ndefined by you\n\n\n\nWe’ll start by getting comfortable with available functions, but in a few days, you’ll learn how to write your own!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#helpful-functions",
    "href": "content/lectures/01-intro-to-r.html#helpful-functions",
    "title": "01-intro-to-r",
    "section": "Helpful Functions",
    "text": "Helpful Functions\n\n\n\nclass() - determine high-level variable type\n\n\nclass(mylist)\n\n[1] \"list\"\n\n\n\nlength()- determine how long an object is\n\n\n# contains 4 elements\nlength(mylist)\n\n[1] 4\n\n\n\n\nstr() - display the structure of an R object\n\n\nstr(mylist)\n\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#coercion",
    "href": "content/lectures/01-intro-to-r.html#coercion",
    "title": "01-intro-to-r",
    "section": "Coercion",
    "text": "Coercion\nR is a dynamically typed language – it will happily convert between the various types without complaint.\n\nc(1, \"Hello\")\n\n[1] \"1\"     \"Hello\"\n\nc(FALSE, 3L)\n\n[1] 0 3\n\nc(1.2, 3L)\n\n[1] 1.2 3.0"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#missing-values",
    "href": "content/lectures/01-intro-to-r.html#missing-values",
    "title": "01-intro-to-r",
    "section": "Missing Values",
    "text": "Missing Values\nR uses NA to represent missing values in its data structures.\n\nclass(NA)\n\n[1] \"logical\"\n\n\n\n\nOther Special Values\nNaN | Not a number\nInf | Positive infinity\n-Inf | Negative infinity"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#activity",
    "href": "content/lectures/01-intro-to-r.html#activity",
    "title": "01-intro-to-r",
    "section": "Activity",
    "text": "Activity\nWhat is the type of the following vectors? Chat about why they have that type.\n\nc(1, NA+1L, \"C\")\nc(1L / 0, NA)\nc(1:3, 5)\nc(3L, NaN+1L)\nc(NA, TRUE)\n\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#operators-1",
    "href": "content/lectures/01-intro-to-r.html#operators-1",
    "title": "01-intro-to-r",
    "section": "Operators",
    "text": "Operators\nAt its simplest, R is a calculator. To carry out mathematical operations, R uses operators."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#arithmetic-operators",
    "href": "content/lectures/01-intro-to-r.html#arithmetic-operators",
    "title": "01-intro-to-r",
    "section": "Arithmetic Operators",
    "text": "Arithmetic Operators\n\n\n\nOperator\nDescription\n\n\n\n\n+\naddition\n\n\n-\nsubtraction\n\n\n*\nmultiplication\n\n\n/\ndivision\n\n\n^ or **\nexponentiation\n\n\nx %% y\nmodulus (x mod y) 9%%2 is 1\n\n\nx %/% y\ninteger division 9%/%2 is 4"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#arithmetic-operators-examples",
    "href": "content/lectures/01-intro-to-r.html#arithmetic-operators-examples",
    "title": "01-intro-to-r",
    "section": "Arithmetic Operators: Examples",
    "text": "Arithmetic Operators: Examples\n\n7 + 6  \n\n[1] 13\n\n2 - 3\n\n[1] -1\n\n4 * 2\n\n[1] 8\n\n9 / 2\n\n[1] 4.5"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#reminder",
    "href": "content/lectures/01-intro-to-r.html#reminder",
    "title": "01-intro-to-r",
    "section": "Reminder",
    "text": "Reminder\nOutput can be stored to a variable\n\nmy_addition <- 7 + 6\n\n\n\nmy_addition\n\n[1] 13"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#comparison-operators",
    "href": "content/lectures/01-intro-to-r.html#comparison-operators",
    "title": "01-intro-to-r",
    "section": "Comparison Operators",
    "text": "Comparison Operators\nThese operators return a Boolean.\n\n\n\nOperator\nDescription\n\n\n\n\n<\nless than\n\n\n<=\nless than or equal to\n\n\n>\ngreater than\n\n\n>=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#comparison-operators-examples",
    "href": "content/lectures/01-intro-to-r.html#comparison-operators-examples",
    "title": "01-intro-to-r",
    "section": "Comparison Operators: Examples",
    "text": "Comparison Operators: Examples\n\n4 < 12\n\n[1] TRUE\n\n4 >= 3\n\n[1] TRUE\n\n6 == 6\n\n[1] TRUE\n\n7 != 6\n\n[1] TRUE"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#your-turn-1",
    "href": "content/lectures/01-intro-to-r.html#your-turn-1",
    "title": "01-intro-to-r",
    "section": "Your Turn",
    "text": "Your Turn\nUse arithmetic and comparison operators to store the value 30 in the variable var_30 and TRUE in the variable true_var.\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#packages",
    "href": "content/lectures/01-intro-to-r.html#packages",
    "title": "01-intro-to-r",
    "section": "Packages",
    "text": "Packages\n\nPackages are installed with the install.packages function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)\n\n\nIn this course, most packages we’ll use have been installed for you already on datahub, so you will only have to load the package in (using library)."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#data-sets-in-r",
    "href": "content/lectures/01-intro-to-r.html#data-sets-in-r",
    "title": "01-intro-to-r",
    "section": "Data “sets” in R",
    "text": "Data “sets” in R\n\n“set” is in quotation marks because it is not a formal data class\nA tidy data “set” can be one of the following types:\n\ntibble\ndata.frame\n\nWe’ll often work with tibbles:\n\nreadr package (e.g. read_csv function) loads data as a tibble by default\ntibbles are part of the tidyverse, so they work well with other packages we are using\nthey make minimal assumptions about your data, so are less likely to cause hard to track bugs in your code"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#data-frames",
    "href": "content/lectures/01-intro-to-r.html#data-frames",
    "title": "01-intro-to-r",
    "section": "Data frames",
    "text": "Data frames\n\nA data frame is the most commonly used data structure in R, they are list of equal length vectors (usually atomic, but can be generic). Each vector is treated as a column and elements of the vectors as rows.\nA tibble is a type of data frame that … makes your life (i.e. data analysis) easier.\nMost often a data frame will be constructed by reading in from a file, but we can create them from scratch.\n\n\ndf <- tibble(x = 1:3, y = c(\"a\", \"b\", \"c\"))\nclass(df)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nglimpse(df)\n\nRows: 3\nColumns: 2\n$ x <int> 1, 2, 3\n$ y <chr> \"a\", \"b\", \"c\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#data-frames-cont.",
    "href": "content/lectures/01-intro-to-r.html#data-frames-cont.",
    "title": "01-intro-to-r",
    "section": "Data frames (cont.)",
    "text": "Data frames (cont.)\n\nattributes(df)\n\n$class\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n$row.names\n[1] 1 2 3\n\n$names\n[1] \"x\" \"y\"\n\n\n\nColumns (variables) in data frames are accessed with $:\n\ndataframe$var_name\n\n\n\n\nclass(df$x)  # access variable type for column\n\n[1] \"integer\"\n\nclass(df$y)  \n\n[1] \"character\""
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#variable-types",
    "href": "content/lectures/01-intro-to-r.html#variable-types",
    "title": "01-intro-to-r",
    "section": "Variable Types",
    "text": "Variable Types\nData stored in columns can include different kinds of information…which would require a different type (class) of variable to be used in R.\n\n\n\n\nR Data Types:\n\nContinuous: numeric, integer\nDiscrete: factors (we haven’t talked about these yet, but will today!)\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#variable-types-cont.",
    "href": "content/lectures/01-intro-to-r.html#variable-types-cont.",
    "title": "01-intro-to-r",
    "section": "Variable Types (cont.)",
    "text": "Variable Types (cont.)\nSometimes data are non-numeric and store words. Even when that is the case, the data can be conveying different information.\n\n\n\n\nR Data Types:\n\nNominal: character\nOrdinal: factors\nBinary: logical OR numeric OR factors 😱\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#example-cat-lovers",
    "href": "content/lectures/01-intro-to-r.html#example-cat-lovers",
    "title": "01-intro-to-r",
    "section": "Example: Cat lovers",
    "text": "Example: Cat lovers\nA survey asked respondents their name and number of cats. The instructions said to enter the number of cats as a numerical value.\n\n🚨 There is code ahead that we’re not going to discuss in detail today, but we will in coming lectures.\n\ncat_lovers <- read_csv(\"https://raw.githubusercontent.com/COGS137/datasets/main/cat-lovers.csv\")"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#the-data",
    "href": "content/lectures/01-intro-to-r.html#the-data",
    "title": "01-intro-to-r",
    "section": "The Data",
    "text": "The Data\n\ncat_lovers |>\n  datatable()"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#the-question",
    "href": "content/lectures/01-intro-to-r.html#the-question",
    "title": "01-intro-to-r",
    "section": "The Question",
    "text": "The Question\nHow many respondents have a below average number of cats?\n\nGiving it a first shot…\n\ncat_lovers |>\n  summarise(mean = mean(number_of_cats))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `mean = mean(number_of_cats)`.\nCaused by warning in `mean.default()`:\n! argument is not numeric or logical: returning NA\n\n\n# A tibble: 1 × 1\n   mean\n  <dbl>\n1    NA\n\n\n\n\n💡 maybe there is missing data in the number_of_cats column!\nOh why will you still not work??!!\n\ncat_lovers |>\n  summarise(mean_cats = mean(number_of_cats, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `mean_cats = mean(number_of_cats, na.rm = TRUE)`.\nCaused by warning in `mean.default()`:\n! argument is not numeric or logical: returning NA\n\n\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1        NA\n\n\n\n\n💡What is the type of the number_of_cats variable?"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#take-a-breath-and-look-at-your-data",
    "href": "content/lectures/01-intro-to-r.html#take-a-breath-and-look-at-your-data",
    "title": "01-intro-to-r",
    "section": "Take a breath and look at your data",
    "text": "Take a breath and look at your data\n\n\nglimpse(cat_lovers)\n\nRows: 60\nColumns: 3\n$ name           <chr> \"Bernice Warren\", \"Woodrow Stone\", \"Willie Bass\", \"Tyro…\n$ number_of_cats <chr> \"0\", \"0\", \"1\", \"3\", \"3\", \"2\", \"1\", \"1\", \"0\", \"0\", \"0\", …\n$ handedness     <chr> \"left\", \"left\", \"left\", \"left\", \"left\", \"left\", \"left\",…"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#lets-take-another-look",
    "href": "content/lectures/01-intro-to-r.html#lets-take-another-look",
    "title": "01-intro-to-r",
    "section": "Let’s take another look",
    "text": "Let’s take another look"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#sometimes-you-need-to-babysit-your-respondents",
    "href": "content/lectures/01-intro-to-r.html#sometimes-you-need-to-babysit-your-respondents",
    "title": "01-intro-to-r",
    "section": "Sometimes you need to babysit your respondents",
    "text": "Sometimes you need to babysit your respondents\n\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n    name == \"Ginger Clark\" ~ 2,\n    name == \"Doug Bass\"    ~ 3,\n    TRUE                   ~ as.numeric(number_of_cats))) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `number_of_cats = case_when(...)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n# A tibble: 60 × 3\n   name           number_of_cats handedness\n   <chr>                   <dbl> <chr>     \n 1 Bernice Warren              0 left      \n 2 Woodrow Stone               0 left      \n 3 Willie Bass                 1 left      \n 4 Tyrone Estrada              3 left      \n 5 Alex Daniels                3 left      \n 6 Jane Bates                  2 left      \n 7 Latoya Simpson              1 left      \n 8 Darin Woods                 1 left      \n 9 Agnes Cobb                  0 left      \n10 Tabitha Grant               0 left      \n# ℹ 50 more rows"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#always-respect-check-data-types",
    "href": "content/lectures/01-intro-to-r.html#always-respect-check-data-types",
    "title": "01-intro-to-r",
    "section": "Always respect (& check!) data types",
    "text": "Always respect (& check!) data types\n\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats)) |>\n  summarise(mean_cats = mean(number_of_cats))\n\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1     0.817"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#now-that-we-know-what-were-doing",
    "href": "content/lectures/01-intro-to-r.html#now-that-we-know-what-were-doing",
    "title": "01-intro-to-r",
    "section": "Now that we know what we’re doing…",
    "text": "Now that we know what we’re doing…\n\ncat_lovers <- cat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats))\n\n… store your data in a variable (here we’re overwriting the old cat_lovers tibble)."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#moral-of-the-story",
    "href": "content/lectures/01-intro-to-r.html#moral-of-the-story",
    "title": "01-intro-to-r",
    "section": "Moral of the story",
    "text": "Moral of the story\n\nIf your data does not behave how you expect it to, type coercion upon reading in the data might be the reason.\nGo in and investigate your data, apply the fix, save your data, live happily ever after."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#r-markdown-tour",
    "href": "content/lectures/01-intro-to-r.html#r-markdown-tour",
    "title": "01-intro-to-r",
    "section": "R Markdown: tour",
    "text": "R Markdown: tour\n\n[DEMO]\n\nBefore we move on…\n   What is the Bechdel test?\n\nThe Bechdel test asks whether a work of fiction features at least two women who talk to each other about something other than a man, and there must be two women named characters.\n\n\nConcepts introduced:\n\nKnitting documents\nR Markdown and (some) R syntax"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#giving-the-demo-a-go",
    "href": "content/lectures/01-intro-to-r.html#giving-the-demo-a-go",
    "title": "01-intro-to-r",
    "section": "Giving the demo a go…",
    "text": "Giving the demo a go…\n\nNavigate to the demo URL (on Canvas)\nAccept the “assignment” (this is NOT graded)\nClone the repo\nEdit the document\nKnit the document\nPush your changes\n\nTry to play around with this after finishing your lab tomorrow!"
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#recap",
    "href": "content/lectures/01-intro-to-r.html#recap",
    "title": "01-intro-to-r",
    "section": "Recap",
    "text": "Recap\n\nAlways best to think of data as part of a tibble\n\nThis plays nicely with the tidyverse as well\nRows are observations, columns are variables\n\nWhat are the common variable types in R\n\nHow do I create a variable of each type?\nWhen would I use each one?\n\nDo I know how to determine the class/type of a variable?\nCan I explain dynamic typing?\nCan I operate on variables and values using…\n\narithmetic operators?\ncomparison operators?\n\nWhat are dataframes/tibbles? and why are they useful?\nWhat is the difference between installing and loading a package?\nWhat are the components of an R Markdown file?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COGS 137: Practical Data Science in R",
    "section": "",
    "text": "Course Info\nPractical Data Science in R focuses on teaching students how to think rigorously throughout the data science process. To this end, through interaction with unique data sets and interesting questions, this course helps students 1) gain fluency in the R programming language, 2) effectively explore & visualize data, 3) use statistical thinking to analyze data and rigorously evaluate their conclusions, and 4) effectively communicate their results. Course objectives are accomplished through hands-on practice, using real-world data to learn via case studies, and project-based learning.\n\nDays & Times\n\n\n\n\n\n Lecture: Tu/Th 2-3:20 (MOS 0204)\n Lab: Fri 3-3:50 (Peterson Hall 102)\n\nInstructional Staff & Office Hours\n\n\n\nInstructor\nShannon Ellis\nsellis@ucsd.edu\nWed 11-12\nVirtual (see Canvas)\n\n\n\n\n\nTu 3:30-4:30 PM\nCSB 243\n\n\nTA\nKunal Rustagi\n\nTh 1:30-2:30 PM\nZoom (see Canvas)\n\n\nIA\nShenova Davis\n\nTBD\nTBD\n\n\n\n\n\n\n\nCourse Objectives\n\nProgram at the introductory level in the R statistical programming language\nEmploy the tidyverse suite of packages to interact with, wrangle, visualize, and model data\nExplain & apply statistical concepts (estimation, linear regression, logistic regression, etc.) for data analysis\nCommunicate data science projects through effective visualization, oral presentation, and written reports\n\n\n\nTexts\nTexts are freely available online:\n\n\n\nIntroduction to Modern Statistics\nÇetinkaya-Rundel and Hardin\nOpenIntro, 1st Edition, 2021\n\n\nR for Data Science\nGrolemund and Wickham\nO’Reilly, 1st edition, 2016\n\n\n\n\n\nMaterials\nYou should have access to a laptop and bring it to every class, fully charged (as possible).\nNote: If you do not have consistent access to the technology needed, please use this form to request a loaner laptop. (For any issues that you may have, please email vcsa@ucsd.edu, and they will work to assist you.)\n\n\nAcknowledgements\nI want to first recognize Dr. Mine Çetinkaya-Rundeland for her unparalleled efforts in support of education and educators in data science, statistics, and R programming. This course website was adapted from her course website. These course slides/labs/homework…also adapted from Mine’s course and the related datascienceinabox. I am so *very* indebted to Mine! I also want to thank the Open Case Studies team for their tireless work in putting together interesting and topical case studies, a handful of which we use throughout the course. And, finally, thanks to Allison Horst, whose artwork is inspiring, educational, and fun…and is used throughout this course. Further, thanks to the R (education) community generally; planning this course was really fun because I had so many awesome resources to choose from. Having these materials made course prep and planning is just another example of what sets the R community apart!"
  },
  {
    "objectID": "policies.html",
    "href": "policies.html",
    "title": "COGS 137",
    "section": "",
    "text": "Class\nClass will include short lectures as well as interactive activities. The goal of lecture is to introduce the topics and information needed for the course. The goal of your time outside of lecture is to practice with topics that are introduced and deepen your understanding of material presented in class. Since so much of programming and statistical analysis is learned best by doing, we’ll prioritize that throughout the course, both in and outside of the classroom.\n\n\nDiversity & Inclusion\nMy goal is that every student, regardless of their background or perspective, will be well-served by this course. My philosophy is that the diversity of students in this class is a huge asset to our learning community; our differences provide opportunities for learning and understanding. I intend to present course materials that are conscious of and respectful to diversity (gender identity, sexuality, disability, age, socioeconomic status, ethnicity, race, nationality, religion, politics, and culture); however, if I ever fall short or if you ever have suggestions for improvement, please do share with me! This feedback is always welcomed, and I am always in the process of learning and improving to this end. If you would like to provide that feedback anonymously, please use the anonymous Google Form.*\n\nWhat should you call me?\nMost students call me Professor/Prof Ellis, and that’s great! This is how I typically sign emails to students. I’m also totally OK with you addressing me as Shannon or Dr. Ellis.\n\n\nWhat I should call you?\nI should call you by your preferred name, with the correct pronunciation. Please correct me (in the moment or via email/Piazza after the fact…however you’re most comfortable) if I ever make a mistake.\n\n\n\nDisability Access\nStudents requesting accommodations due to a disability should provide a current Authorization for Accommodation (AFA) letter. These letters are issued by the Office for Students with Disabilities (OSD), which is located in University Center 202 behind Center Hall. If you are struggling to get necessary accommodations or want to further discuss your accommodations, please feel free to reach out to Professor Ellis directly.\nContacting the OSD can help you further:\n858.534.4382 (phone)\nosd@ucsd.edu (email)\nhttp://disabilities.ucsd.edu\n\n\nHow to get help\nIt’s great that we have so many ways to communicate, but it can get tricky to figure out who to contact or where your question belongs or when to expect a response. When in doubt, Piazza is great!\nMore specifically, if you have:\n\nquestions about course content - these are awesome! We want everyone to see them and have their questions answered too, so either ask them in class (which is recorded) and/or post these to Piazza!\na technical assignment question - come to office hours (or post to Piazza). Answering technical questions is often best accomplished ‘in person’ where we can discuss the question and talk through ideas. However, if that is not possible, post your question to Piazza. Be as specific as you can in the question you ask. And, for those answering, help your classmates as much as you can without just giving the answer. Help guide them, point them in a direction, provide pseudo code, but do not provide code that answers assignment questions.\nquestions about course logistics - first, check the course website. If you can’t find the answer there, first ask a classmate. If still unsure, post on Piazza.\nquestions about a grade - Post on Piazza with “regrades” tag in a private post to “Instructors & TAs”.\nsomething super cool to share related to class or want to talk about a topic in further depth - feel free to email Professor Ellis (sellis@ucsd.edu) or come to office hours. Please include COGS137 in the email subject line.\nsome feedback about the course you want to share anonymously - If you’ve been offended by an example in class, really liked or disliked a lesson, or wish there were something covered in class that wasn’t but would rather not share this publicly, etc., please fill out the anonymous Google Form*\n\n*This form can be taken down at any time if it’s not being used for its intended purpose; however, you all will be notified should that happen.\n\n\nAcademic integrity\nDon’t cheat.\nYou are generally encouraged to work together and help one another in this course. However, you are personally responsible for the work you submit. A helpful heuristic can be to ask yourself “Can I explain each piece of code and each analysis carried out in what I’m submitting? Could I reproduce this code/analysis on my own?”; you should be able to answer “Yes” to both questions for everything you submit in this course. For labs and assignments, you are allowed and encouraged to work together, but it is your responsibility to ensure you understand everything you’ve submitted. (For the midterm, all work has to be completed individually and communication with other humans about the exam is not allowed; this will be discussed more explicitly beforehand.)\nA note on sharing / reusing code: The Internet is an excellent resource; there will be many times you find helpful information online. You should use available resources (e.g. ChatGPT, Copilot, StackOverflow, etc.), but you must explicitly cite any code you use directly or any code you use as inspiration. This can be done by including the URL/reference to the source directly in your code (as a code comment) or in accompanying text for a given assignment/exam/lab. You should never share code directly (e.g. copy + paste; share an send an answer to a classmate), but you can discuss code and work together on everything other than take-home exams.\nPlease review UCSD’s academic integrity policies here.\nCheating and plagiarism have been and will be strongly penalized. If, for whatever reason, Canvas or DataHub is down or something else prohibits you from being able to turn in an assignment on time, immediately contact Professor Ellis by emailing (sellis@ucsd.edu) your assignment as soon as possible to avoid it being graded as late.\n\n\nCourse components\n\nLecture\nLectures will be your introduction to course topics and material. Lectures will be interactive, and you will be given time to practice with the lecture concepts during class. Attendance is not required, but is encouraged if you’re feeling well. To help incentivize coming to class, there will be a daily participation survey that will open at the end of lecture and close shortly after each Tues/Thurs lecture. Each time you fill out the lecture survey, you get a small % of credit toward your final project Completion of all surveys can provide up to 3.5% extra credit on your final project (not your final course grade).\n\nReadings\nReadings will be assigned for some class days and are best completed prior to the day’s lecture. These are meant to provide background and additional context for the upcoming day’s lecture topics. These can also be a good source after class when studying or reviewing topics discussed in class.\n\n\nPodcast\nIn case you miss class or would like to review the material covered in class, you can view the podcasts here.\n\n\n\nLabs (16%)\nLabs are meant to give you deeper understanding and hands-on experience with the technical and statistical topics introduced during lecture in a low-stakes environment. Lab sections will typically comprise of a short review and explanation of the lab and then time for you to complete the assigned weekly lab. Labs are submitted individually, but you are encouraged to work together during lab. You are free to ask and answer each others’ questions and discuss your work. Instructional staff will be present during lab to help further your understanding.\nLabs are graded for concerted effort. This is because when we learn something new, mistakes are going to happen! In fact, we learn a lot from the mistakes we make during the learning process. If your submission reflects ~50 min of work/effort, you will receive full credit for the week’s lab.\nLab attendance is not required, but is definitely encouraged if you are feeling well. While slides used are shared, lab sessions are not recorded, so being present is the best way to fully engage in the course.\n\n\nHomework (24%)\nAfter practice in lecture and labs, homework assignments are meant to demonstrate your solidified understanding of the course material. These are typically 2-4x longer and more involved than labs. Homework assignments are completed and submitted individually and are marked for correctness. You are allowed to work together on homework assignments, but academic integrity must be upheld.\n\n\nMidterm (15%)\nThere will be a single take-home midterm, and you will have at least 48 hours to complete it. This exam is meant to assess your understanding of the R programming language prior to us moving into focusing on case studies and full analyses. The exam will be completed individually and will be open-notes and open-Internet; however, you will not be permitted to ask questions of one another or instructional staff while completing the take-home exam.\n\n\nTeams\nThere will be two case study mini-projects and a final project. Teams will be randomly assigned for the mini-projects but you will choose your final project groups. (By working with teammates throughout the course, you will also be able to use one another as a resource during labs and assignments.)\n\n\nCase Study Mini-projects (25%)\nStarting week 5, we will transition to a project-based course. This will allow us to use case studies to focus on deepening statistical knowledge and carrying out interesting analyses. In this, specific case studies and statistics topics will be discussed in class. In your teams and for each of the case studies, you will: 1) extend the analysis from class and 2) communicate your findings for both a technical and general audience.\n\n\nFinal Project (20%)\nThe final project will be completed in groups. There will be two different general final projects from which your group can choose, but the idea is that whichever you choose, you will be able to tackle it using and building upon the tools and techniques discussed in class. Briefly here, the two options will be: 1. Create a technical presentation on a statistics topic and/or an R package. 2. Carry out a data analysis.\nEach will require a written technical report, a communication to a general audience, and an oral presentation, but the specific requirements will differ between the two.\nFinal Project groups will have to submit a proposal during week 8 (2%). Final projects (18%) will be due on Tues of finals week at 11:59 PM.\n\n\n\nGrading\nYour final grade will be comprised of the following:\n\n\n\nLabs (8)\n16%\n\n\nHomework (3)\n24%\n\n\nMidterm (1)\n15%\n\n\nCase Study Projects* (2)\n25%\n\n\nFinal Project* (Proposal + Project)\n20%\n\n\n\n* indicates group submission\n\nFinal Grades\nTo calculate final grades, I use the standard grading scale and do not round grades up (given the numerous extra credit opportunities offered):\n\n\n\n97-100%\nA+\n\n\n93-96%\nA\n\n\n90-92%\nA-\n\n\n87-89%\nB+\n\n\n83-86%\nB\n\n\n80-82%\nB-\n\n\n77-79%\nC+\n\n\n73-76%\nC\n\n\n70-72%\nC-\n\n\n67-69%\nD+\n\n\n63-66%\nD\n\n\n60-62%\nD-\n\n\n<60%\nF\n\n\n\n\n\n\nLate / missed work\nLate homework assignments and case study projects will be accepted up to 3 days (72 hours) after the assigned deadline. Late submissions will receive a 25% deduction.\nThere are no late deadlines for labs, the exam, or the final project.\nNote: Prof Ellis is a reasonable person; reach out to her if you have an extenuating circumstance at any point in the quarter.\n\n\nRegrade requests\nWe will work hard to grade everyone fairly and return assignments quickly. And, we know you also work hard and want you to receive the grade you’ve earned. Occasionally, grading mistakes do happen, and it’s important to us to correct them. If you think there is a mistake in your grade on an assignment, post privately on Piazza to “Instructors” using the “regrades” tag within 72 hours. This post should include evidence of why you think your answer was correct and should point to the specific part of the assignment in question.\n\n\nProfessionalism\nPlease refrain from texting or using your computer for anything other than coursework during class. Not only is this distracting to you, but it can also be distracting to those around you. (Note that there is no consequence associated with this. I know it can be difficult, but I ask that you try your best!)"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "COGS 137",
    "section": "",
    "text": "Week\nDate\nTitle\nType\n\n\n\n\n0\nTh Sep 28\nWelcome & Tooling\nLecture\n\n\n1\nTu Oct 3\nIntro to R\nLecture\n\n\n1\nTh Oct 5\nData Wrangling: dplyr\nLecture\n\n\n1\nFri Oct 6\nLab 01: Intro to R\nLab\n\n\n2\nTu Oct 10\nData Wrangling: tidyr\nLecture\n\n\n2\nTh Oct 12\nData Visualization: ggplot2 (day 1)\nLecture\n\n\n2\nFri Oct 13\nLab 02: Data Wrangling\nLab\n\n\n3\nMon Oct 16\nHW01 due (11:59 PM)\nHW\n\n\n3\nTu Oct 17\nData Visualization: ggplot2 (day 2)\nLecture\n\n\n3\nTh Oct 19\nData Analysis & Modeling\nLecture\n\n\n3\nFri Oct 20\nLab 03: Data Visualization\nLab\n\n\n4\nTu Oct 24\nLinear Models Review\nLecture\n\n\n4\nTh Oct 26\nEffective Communication\nLecture\n\n\n4\nFri Oct 27\nLab 04: Modeling\nLab\n\n\n5\nMon Oct 30\nHW02 due (11:59 PM)\nHW\n\n\n5\nTu Oct 31\nCase Study & Final Project Info\nLecture\n\n\n5\nTh Nov 2\nMultiple Linear Regression\nLecture\n\n\n5\nFri Nov 3\nLab used for midterm review\nLab\n\n\n6\nMon Nov 6\nMIDTERM EXAM (due 11:59 PM) \nExam\n\n\n6\nTu Nov 7\nCase Study 01: THC Biomarkers (day 1)\nLecture\n\n\n6\nTh Nov 9\nCase Study 01: THC Biomarkers (day 2)\nLecture\n\n\n6\nFri Nov 10\nLab 05: Multiple Linear Regression\nLab\n\n\n7\nTu Nov 14\nCase Study 01: THC Biomarkers (day 3)\nLecture\n\n\n7\nTh Nov 16\nLogistic Regression\nLecture\n\n\n7\nFri Nov 17\nLab 06: CS01\nLab\n\n\n8\nMon Nov 20\nHW03 due (11:59 PM)\nHW\n\n\n8\nMon Nov 20\nFinal Project Proposal Due\nProject\n\n\n8\nTu Nov 21\nCase Study 02: Vaping Behaviors (day 1)\nLecture\n\n\n8\nTh Nov 23\nNo Class (Thanksgiving)\n--\n\n\n9\nMon Nov 27\nCS01 Due (11:59 PM)\nCase Study\n\n\n9\nTu Nov 28\nCase Study 02: Vaping Behaviors (day 2)\nLecture\n\n\n9\nTh Nov 30\nCase Study 02: Vaping Behaviors (day 3)\nLecture\n\n\n9\nFri Dec 1\nLab 07: Logistic Regression & CS02\nLab\n\n\n10\nMon Dec 4\nCS02 Due\nCase Study\n\n\n10\nTu Dec 5\nFinal Project Brainstorming\nLecture\n\n\n10\nTh Dec 7\nNext Steps\nLecture\n\n\n10\nFri Dec 8\nLab 08: Final Project\nLab\n\n\nFinals\nTu Dec 12\nFinal Project Due (11:59 PM)\nProject"
  },
  {
    "objectID": "content/lectures/01-intro-to-r-slides.html#github-setup",
    "href": "content/lectures/01-intro-to-r-slides.html#github-setup",
    "title": "01-intro-to-r",
    "section": "GitHub Setup",
    "text": "GitHub Setup\nSee this week’s lab…\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/lectures/01-intro-to-r.html#github-setup",
    "href": "content/lectures/01-intro-to-r.html#github-setup",
    "title": "01-intro-to-r",
    "section": "GitHub Setup",
    "text": "GitHub Setup\nSee this week’s lab…\n\n\nPut a green sticky on the front of your computer when you’re done. Put a pink if you want help/have a question."
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#agenda",
    "href": "content/labslides/01-lab-deck.html#agenda",
    "title": "Lab 01: Tooling",
    "section": "Agenda",
    "text": "Agenda\n\nLab structure: Lab structure overview.\nLab 01 intro and demos: Introduce the lab, and work through the first section as a class.\nOn your own: Work on the rest of the lab “on your own”, but feel free to check in with classmates as much as you like."
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#lab-structure-1",
    "href": "content/labslides/01-lab-deck.html#lab-structure-1",
    "title": "Lab 01: Tooling",
    "section": "Lab structure",
    "text": "Lab structure\n\n5-10 minute introduction (a bit longer today)\nUse the remaining time to work through the lab exercises and fill out your lab report\n\nSubmit: on your own\nWorking: always allowed to work together\n\nLab instructions posted on the course website on the left panel under “Labs”\n\nLet’s go find today’s lab!"
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#tips",
    "href": "content/labslides/01-lab-deck.html#tips",
    "title": "Lab 01: Tooling",
    "section": "Tips",
    "text": "Tips\n\nYou do not have to finish the lab in class; you have until midnight to submit. But, you might choose to get through portions that you think will be challenging (which initially might be the coding component) in class when staff can help you on the spot, and leave the narrative writing until later.\nDo not pressure each other to finish early; use the time wisely to really learn the material and produce a quality lab.\nWhen working with others, do not split up lab among classmates, work on it together in its entirety.\nSometimes you may not finish the entire lab…and that’s ok! When this happens or you’re unsure about what you turn in, be sure to go back and check your thoughts/work against the posted answer key."
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#goals",
    "href": "content/labslides/01-lab-deck.html#goals",
    "title": "Lab 01: Tooling",
    "section": "Goals",
    "text": "Goals\n\nIntroduce you to Git and GitHub: collaboration and version control system that we will be using throughout the course\n\nGit is a version control system – like “Track Changes” features from Microsoft Word/Google Docs on steroids\nGitHub is the home for your git-based projects on the internet\nConnect your RStudio on datahub to your GitHub account\n\nIntroduce you to R and RStudio:\n\nR is the name of the programming language itself\nRStudio is a convenient interface"
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#getting-started-github-datahub",
    "href": "content/labslides/01-lab-deck.html#getting-started-github-datahub",
    "title": "Lab 01: Tooling",
    "section": "Getting started: GitHub & datahub",
    "text": "Getting started: GitHub & datahub\nFirst, put away computers, and watch me do it:\n\nDemo of the process\nSteps are spelled out in the “GitHub Housekeeping” portion of the lab"
  },
  {
    "objectID": "content/labslides/01-lab-deck.html#getting-started-assignment-retrieval",
    "href": "content/labslides/01-lab-deck.html#getting-started-assignment-retrieval",
    "title": "Lab 01: Tooling",
    "section": "Getting started: Assignment Retrieval",
    "text": "Getting started: Assignment Retrieval\nFirst, put away computers, and watch me do it:\n\nClick on the assignment link on Canvas for today’s lab to create your GitHub repository (which we’ll refer to as “repo” going forward) for the lab. This repo contains a template you can build on to complete your lab.\nOn GitHub, accept the assignment. Click on the link to navigate to the repo.\nOn the repo, click the green “<> Code” button, ensure that “SSH” is selected, and then copy the URL.\nGo to datahub. and open RStudio. Go to File > New Project… and select to create a New Project from Version Control. On the following menu, select Git.\nCopy and paste the URL of your assignment repo into the “Repository URL” dialog box.\nHit Create Project.\n\nNow it’s your turn! Place a green sticky on your laptop when you’re done with this part (you can continue if you like). Place a pink sticky if you have questions."
  }
]